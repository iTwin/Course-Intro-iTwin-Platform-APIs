{
    "openapi": "3.0.1",
    "info": {
        "title": "iModels",
        "description": "iModelHub is the control center for iModels. It is responsible for coordinating concurrent access to iModels as well as changes made to them in a form of [Changesets](https://www.itwinjs.org/learning/glossary/#changeset).\r\n\r\nOverview of [iModelHub](https://www.itwinjs.org/learning/imodelhub/) and [iModels](https://www.itwinjs.org/learning/imodels/).\r\n\r\nThese APIs lets you retrieve metadata about the iModels pushed to iModelHub. To view, create or update your iModels use [iModel.js](https://www.itwinjs.org/) client libraries.\r\n",
        "version": "v1"
    },
    "servers": [
        {
            "url": "https://api.bentley.com/imodels"
        }
    ],
    "paths": {
        "/": {
            "get": {
                "tags": [
                    "iModels"
                ],
                "summary": "Get Project iModels",
                "description": "---\r\n\r\nRetrieves a list of iModels belonging to the specified Project.\r\n\r\n### Notes\r\n\r\nThe `Prefer` header can be used to specify how much result metadata is desired by the client. The `Prefer` request header field is used to indicate that particular server behaviors are preferred by the client but are not required for successful completion of the request.\r\n\r\nThis operation supports `\"return=representation\"` and `\"return=minimal\"` preferences.\r\n\r\nThe `\"return=representation\"` preference indicates that the client prefers that the server include an entity representing the current state of the resource in the response to a successful request.\r\nThe `\"return=minimal\"` preference indicates that the client wishes the server to return only a minimal response to a successful request. This is the default preference if `Prefer` header is not specified.\r\n\r\n### Authentication\r\n\r\nRequires `Authorization` header with valid Bearer token for scope `imodels:read`.\r\n\r\nFor more documentation on authorization and how to get access token visit [OAUTH2 Authorization](https://developer.bentley.com/apis/overview/authorization/) page.\r\n\r\n### Authorization\r\n\r\nUser must have `imodels_webview` permission assigned at the iModel level and at least `imodels_webview` permission assigned at the Project level. If permissions at the iModel level are not configured, then user must have `imodels_webview` permission assigned at the Project level.\r\n\r\nAlternatively the user should be an Organization Administrator for the Organization that owns a given Project the iModel belongs to.\r\n\r\nAn Organization Administrator must have at least one of the following roles assigned in User Management: Account Administrator, Co-Administrator, or CONNECT Services Administrator. For more information about User Management please visit our Bentley Communities [Licensing, Cloud, and Web Services](https://communities.bentley.com/communities/other_communities/licensing_cloud_and_web_services/w/wiki/50711/user-management-2-0) wiki page.\r\n\r\n### Rate limits\r\n\r\nAll iTwin Platform API operations have a rate limit. For more documentation on that visit [Rate limits and quotas](https://developer.bentley.com/apis/overview/rate-limits/) page.\r\n\r\n---\r\n",
                "operationId": "get-project-imodels",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "query",
                        "description": "Id of the Project.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "The $skip query option requests the number of items in the queried collection that are to be skipped and not included in the result. E.g. to return items from the collection starting at the third place provide the following query: $skip=2.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "The $top query option requests the number of items in the queried collection to be included in the result. E.g. to return only first collection item provide the following query: $top=1. When $top parameter is not provided default is set to 100. $top value cannot exceed 1000.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "$orderBy",
                        "in": "query",
                        "description": "The $orderBy query option allows clients to request ascending using 'asc' or descending using 'desc' order of the returned collection by one of the item properties. Currently the only supported property for iModels is 'name'. When neither 'asc' or 'desc' keyword is specified the collection is sorted in ascending order. To sort the collection in descending order provide 'desc' keyword e.g.: $orderBy=name desc",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "The name query option allows users to filter iModels by their name property. E.g. to return iModels that have a name equal to 'Sun City Renewable-energy Plant' provide the following query: name=Sun%20City%20Renewable-energy%20Plant. Valid values for this parameter follow the same requirements as for iModel creation - strings should be not empty, consist not only of whitespace and not exceed 255 characters. This query option uses exact matching.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "OAuth access token with scope `imodels:read`",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "Setting to `application/vnd.bentley.itwin-platform.v1+json` is recommended.",
                        "schema": {
                            "enum": [
                                "application/vnd.bentley.itwin-platform.v1+json"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "Prefer",
                        "in": "header",
                        "description": "Indicates a level of details in the response. This operation supports 'return=representation' and 'return=minimal' preferences.",
                        "schema": {
                            "enum": [
                                "return=minimal",
                                "return=representation"
                            ],
                            "type": "string",
                            "default": "return=minimal"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json;minimal": {
                                "schema": {
                                    "$ref": "#/components/schemas/iModelsMinimal"
                                },
                                "example": {
                                    "iModels": [
                                        {
                                            "id": "5e19bee0-3aea-4355-a9f0-c6df9989ee7d",
                                            "displayName": "Sun City Renewable-energy Plant"
                                        },
                                        {
                                            "id": "e5692781-32b8-473d-8752-908468f46926",
                                            "displayName": "Power Town Processing Plant"
                                        }
                                    ],
                                    "_links": {
                                        "self": {
                                            "href": "https://api.bentley.com/imodels?projectId=ad0ba809-9241-48ad-9eb0-c8038c1a1d51&$skip=0&$top=100"
                                        },
                                        "prev": {
                                            "href": "https://api.bentley.com/imodels?projectId=ad0ba809-9241-48ad-9eb0-c8038c1a1d51&$skip=0&$top=100"
                                        },
                                        "next": {
                                            "href": "https://api.bentley.com/imodels?projectId=ad0ba809-9241-48ad-9eb0-c8038c1a1d51&$skip=100&$top=100"
                                        }
                                    }
                                }
                            },
                            "application/json;representation": {
                                "schema": {
                                    "$ref": "#/components/schemas/iModelsRepresentation"
                                },
                                "example": {
                                    "iModels": [
                                        {
                                            "id": "5e19bee0-3aea-4355-a9f0-c6df9989ee7d",
                                            "displayName": "Sun City Renewable-energy Plant",
                                            "name": "Sun City Renewable-energy Plant",
                                            "description": "Overall model of wind and solar farms in Sun City",
                                            "state": "initialized",
                                            "createdDateTime": "2020-10-20T10:51:33.17+00:00",
                                            "projectId": "ad0ba809-9241-48ad-9eb0-c8038c1a1d51",
                                            "extent": {
                                                "southWest": {
                                                    "latitude": 46.1326770283481,
                                                    "longitude": 7.67212000993845
                                                },
                                                "northEast": {
                                                    "latitude": 46.3027639547812,
                                                    "longitude": 7.83554164079782
                                                }
                                            },
                                            "_links": {
                                                "creator": {
                                                    "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/users/42101fba-847a-4f4e-85a8-a4bed89065e4"
                                                },
                                                "changesets": {
                                                    "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/changesets"
                                                },
                                                "namedVersions": {
                                                    "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/namedversions"
                                                }
                                            }
                                        },
                                        {
                                            "id": "e5692781-32b8-473d-8752-908468f46926",
                                            "displayName": "Power Town Processing Plant",
                                            "name": "Power Town Processing Plant",
                                            "description": "Overall model of processing plant in Power town",
                                            "state": "notInitialized",
                                            "createdDateTime": "2020-10-20T10:51:33.17+00:00",
                                            "projectId": "ad0ba809-9241-48ad-9eb0-c8038c1a1d51",
                                            "extent": {
                                                "southWest": {
                                                    "latitude": 40.0650515864199,
                                                    "longitude": -75.6892050246177
                                                },
                                                "northEast": {
                                                    "latitude": 40.0669564955616,
                                                    "longitude": -75.6865871886192
                                                }
                                            },
                                            "_links": {
                                                "creator": {
                                                    "href": "https://api.bentley.com/imodels/e5692781-32b8-473d-8752-908468f46926/users/42101fba-847a-4f4e-85a8-a4bed89065e4"
                                                },
                                                "changesets": {
                                                    "href": "https://api.bentley.com/imodels/e5692781-32b8-473d-8752-908468f46926/changesets"
                                                },
                                                "namedVersions": {
                                                    "href": "https://api.bentley.com/imodels/e5692781-32b8-473d-8752-908468f46926/namedversions"
                                                }
                                            }
                                        }
                                    ],
                                    "_links": {
                                        "self": {
                                            "href": "https://api.bentley.com/imodels?projectId=ad0ba809-9241-48ad-9eb0-c8038c1a1d51&$skip=0&$top=100"
                                        },
                                        "prev": {
                                            "href": "https://api.bentley.com/imodels?projectId=ad0ba809-9241-48ad-9eb0-c8038c1a1d51&$skip=0&$top=100"
                                        },
                                        "next": {
                                            "href": "https://api.bentley.com/imodels?projectId=ad0ba809-9241-48ad-9eb0-c8038c1a1d51&$skip=100&$top=100"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "This response indicates that request lacks valid authentication credentials. Access token might not been provided, issued by the wrong issuer, does not have required scopes or request headers were malformed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "Unauthorized",
                                        "message": "Access denied due to invalid access_token. Make sure to provide a valid token for this API endpoint."
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Specified project was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "ProjectNotFound",
                                        "message": "Requested project is not available."
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The 422 (Unprocessable Entity) status code indicates that the request cannot be processed by the server due to a client error (e.g. malformed request syntax)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "InvalidiModelsRequest",
                                        "message": "Cannot get iModels.",
                                        "details": [
                                            {
                                                "code": "InvalidValue",
                                                "message": "'abc' is not a valid 'projectId'.",
                                                "target": "projectId"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "This response indicates that the user has sent too many requests in a given amount of time.",
                        "headers": {
                            "retry-after": {
                                "description": "The number of requests exceeds the rate-limit for the client subscription.",
                                "required": true,
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "TooManyRequests",
                                        "message": "More requests were received than the subscription rate-limit allows."
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "iModels"
                ],
                "summary": "Create iModel",
                "description": "---\r\n\r\nCreates an [iModel](https://www.itwinjs.org/learning/glossary/#imodel).\r\nThere are three different ways to create an iModel.\r\n\r\n### Create an empty iModel\r\n To create an empty iModel do not provide `template` and `baselineFile` properties.\r\n\r\n### Create an iModel from an existing iModel\r\n To create an iModel from another iModel provide `template` property. The server will apply changesets up to the one specified by `changesetId` property to the source iModel file and use it as a Baseline File for the newly created iModel. User must have `imodels_read` permissions to the source iModel. Source and target projects must be in the same data center.\r\n\r\n### Create an iModel using a Baseline File.\r\nCreating an iModel using a Baseline File allows to upload a custom iModel file that will become the base file of the created iModel. There are three steps in creating an iModel from a Baseline File:\r\n\r\n1. Create a new iModel and provide `baselineFile` property. **It is important to provide correct file size or the iModel creation will fail in the later steps.**\r\n\r\n2. Upload Baseline File to blob storage using `upload` property link from the response of iModel creation.\r\n```\r\nRequest syntax:\r\n    PUT upload HTTP/1.1\r\nRequest headers:\r\n    x-ms-blob-type: BlockBlob\r\n```\r\n\r\n3. Complete the iModel creation by confirming that Baseline File was uploaded successfully. See [Complete iModel Baseline Upload](https://developer.bentley.com/apis/imodels/operations/complete-imodel-baseline-file-upload/) operation for the documentation.\r\n\r\n### iModel initialization\r\n\r\nWhen creating an empty iModel it will be initialized immediately. When creating an iModel using `template` or `baselineFile` properties initialization will be scheduled and it's state is reflected in the `state` property. For a more detailed information about initialization state see [Get iModel Baseline File](https://developer.bentley.com/apis/operations/get-imodel-baseline-file/) operation.\r\n\r\n### Authentication\r\n\r\nRequires `Authorization` header with valid Bearer token for scope `imodels:modify`.\r\n\r\nFor more documentation on authorization and how to get access token visit [OAUTH2 Authorization](https://developer.bentley.com/apis/overview/authorization/) page.\r\n\r\n### Authorization\r\n\r\nUser must be an Organization Administrator for the Organization that owns a given Project or have `imodels_manage` permission assigned at the Project level.\r\n\r\nAn Organization Administrator must have at least one of the following roles assigned in User Management: Account Administrator, Co-Administrator, or CONNECT Services Administrator. For more information about User Management please visit our Bentley Communities [Licensing, Cloud, and Web Services](https://communities.bentley.com/communities/other_communities/licensing_cloud_and_web_services/w/wiki/50711/user-management-2-0) wiki page.\r\n\r\n### Rate limits\r\n\r\nAll iTwin Platform API operations have a rate limit. For more documentation on that visit [Rate limits and quotas](https://developer.bentley.com/apis/overview/rate-limits/) page.\r\n\r\n---",
                "operationId": "create-imodel",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "OAuth access token with scope `imodels:modify`",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "Setting to `application/vnd.bentley.itwin-platform.v1+json` is recommended.",
                        "schema": {
                            "enum": [
                                "application/vnd.bentley.itwin-platform.v1+json"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Indicates request body content type. Supported media type is `application/json`.",
                        "schema": {
                            "enum": [
                                "application/json"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/iModelCreate"
                            },
                            "example": {
                                "projectId": "ad0ba809-9241-48ad-9eb0-c8038c1a1d51",
                                "name": "Sun City Renewable-energy Plant",
                                "description": "Overall model of wind and solar farms in Sun City",
                                "extent": {
                                    "southWest": {
                                        "latitude": 46.1326770283481,
                                        "longitude": 7.67212000993845
                                    },
                                    "northEast": {
                                        "latitude": 46.3027639547812,
                                        "longitude": 7.83554164079782
                                    }
                                },
                                "template": null,
                                "baselineFile": null
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "OK",
                        "content": {
                            "application/json;Empty iModel": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreatediModelResponse"
                                },
                                "example": {
                                    "iModel": {
                                        "id": "5e19bee0-3aea-4355-a9f0-c6df9989ee7d",
                                        "displayName": "Sun City Renewable-energy Plant",
                                        "name": "Sun City Renewable-energy Plant",
                                        "description": "Overall model of wind and solar farms in Sun City",
                                        "state": "initialized",
                                        "createdDateTime": "2020-10-20T10:51:33.17+00:00",
                                        "projectId": "ad0ba809-9241-48ad-9eb0-c8038c1a1d51",
                                        "extent": {
                                            "southWest": {
                                                "latitude": 46.1326770283481,
                                                "longitude": 7.67212000993845
                                            },
                                            "northEast": {
                                                "latitude": 46.3027639547812,
                                                "longitude": 7.83554164079782
                                            }
                                        },
                                        "_links": {
                                            "creator": {
                                                "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/users/42101fba-847a-4f4e-85a8-a4bed89065e4"
                                            },
                                            "changesets": {
                                                "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/changesets"
                                            },
                                            "namedVersions": {
                                                "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/namedversions"
                                            },
                                            "upload": null,
                                            "complete": null
                                        }
                                    }
                                }
                            },
                            "application/json;iModel from Template": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreatediModelResponse"
                                },
                                "example": {
                                    "iModel": {
                                        "id": "5e19bee0-3aea-4355-a9f0-c6df9989ee7d",
                                        "displayName": "Sun City Renewable-energy Plant",
                                        "name": "Sun City Renewable-energy Plant",
                                        "description": "Overall model of wind and solar farms in Sun City",
                                        "state": "notInitialized",
                                        "createdDateTime": "2020-10-20T10:51:33.17+00:00",
                                        "projectId": "ad0ba809-9241-48ad-9eb0-c8038c1a1d51",
                                        "extent": {
                                            "southWest": {
                                                "latitude": 46.1326770283481,
                                                "longitude": 7.67212000993845
                                            },
                                            "northEast": {
                                                "latitude": 46.3027639547812,
                                                "longitude": 7.83554164079782
                                            }
                                        },
                                        "_links": {
                                            "creator": {
                                                "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/users/42101fba-847a-4f4e-85a8-a4bed89065e4"
                                            },
                                            "changesets": {
                                                "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/changesets"
                                            },
                                            "namedVersions": {
                                                "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/namedversions"
                                            },
                                            "upload": null,
                                            "complete": null
                                        }
                                    }
                                }
                            },
                            "application/json;iModel from Baseline File": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreatediModelResponse"
                                },
                                "example": {
                                    "iModel": {
                                        "id": "5e19bee0-3aea-4355-a9f0-c6df9989ee7d",
                                        "displayName": "Sun City Renewable-energy Plant",
                                        "name": "Sun City Renewable-energy Plant",
                                        "description": "Overall model of wind and solar farms in Sun City",
                                        "state": "notInitialized",
                                        "createdDateTime": "2020-10-20T10:51:33.17+00:00",
                                        "projectId": "ad0ba809-9241-48ad-9eb0-c8038c1a1d51",
                                        "extent": {
                                            "southWest": {
                                                "latitude": 46.1326770283481,
                                                "longitude": 7.67212000993845
                                            },
                                            "northEast": {
                                                "latitude": 46.3027639547812,
                                                "longitude": 7.83554164079782
                                            }
                                        },
                                        "_links": {
                                            "creator": {
                                                "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/users/42101fba-847a-4f4e-85a8-a4bed89065e4"
                                            },
                                            "changesets": {
                                                "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/changesets"
                                            },
                                            "namedVersions": {
                                                "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/namedversions"
                                            },
                                            "upload": {
                                                "href": "https://imodelhub.blob.core.windows.net/imodelhub-5e19bee0-3aea-4355-a9f0-c6df9989ee7d/5e19bee0-3aea-4355-a9f0-c6df9989ee7d.bim?sv=2019-07-07&sr=b&sig=ByGsPs4cwKyUfnV6%2BjDZFDL3J7QiE0vl917MCX%2FC35Y%3D&st=2021-07-30T10%3A53%3A09.5224547Z&se=2021-07-30T11%3A13%3A09.5224552Z&sp=rw"
                                            },
                                            "complete": {
                                                "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/baselinefile"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "This response indicates that request lacks valid authentication credentials. Access token might not been provided, issued by the wrong issuer, does not have required scopes or request headers were malformed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "Unauthorized",
                                        "message": "Access denied due to invalid access_token. Make sure to provide a valid token for this API endpoint."
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "User is not authorized to create an iModel.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "InsufficientPermissions",
                                        "message": "The user has insufficient permissions for the requested operation."
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Specified project was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "ProjectNotFound",
                                        "message": "Requested project is not available."
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "iModel with the same name already exists within the project.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "iModelExists",
                                        "message": "iModel with the same name already exists within the project."
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The 422 (Unprocessable Entity) status code indicates that the request cannot be processed by the server due to a client error (e.g. malformed request syntax)",
                        "content": {
                            "application/json;InvalidiModelsRequest": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "InvalidiModelsRequest",
                                        "message": "Cannot create iModel.",
                                        "details": [
                                            {
                                                "code": "InvalidValue",
                                                "message": "Provided 'extent' value is not valid. Valid 'latitude' value range is -90 to 90.",
                                                "target": "extent"
                                            },
                                            {
                                                "code": "InvalidHeaderValue",
                                                "message": "'application/xml' is not supported 'content-type'. Supported media type is 'application/json'.",
                                                "target": "content-type"
                                            },
                                            {
                                                "code": "MissingRequiredProperty",
                                                "message": "Required property is missing.",
                                                "target": "name"
                                            },
                                            {
                                                "code": "InvalidRequestBody",
                                                "message": "Failed to parse request body. Make sure it is a valid JSON."
                                            }
                                        ]
                                    }
                                }
                            },
                            "application/json;MissingRequestBody": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "MissingRequestBody",
                                        "message": "Request body was not provided."
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "This response indicates that the user has sent too many requests in a given amount of time.",
                        "headers": {
                            "retry-after": {
                                "description": "The number of requests exceeds the rate-limit for the client subscription.",
                                "required": true,
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "TooManyRequests",
                                        "message": "More requests were received than the subscription rate-limit allows."
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{id}/thumbnail": {
            "put": {
                "tags": [
                    "Thumbnails"
                ],
                "summary": "Upload iModel Thumbnail",
                "description": "---\r\n\r\nUploads a thumbnail file. Request content should be binary content of an image. Supported thumbnail types are 'image/png' or 'image/jpeg', but once uploaded 'image/jpeg' will be converted to 'image/png'. Maximum supported thumbnail size is 5 megabytes.\r\n\r\n### Authentication\r\n\r\nRequires `Authorization` header with valid Bearer token for scope `imodels:modify`.\r\n\r\nFor more documentation on authorization and how to get access token visit [OAUTH2 Authorization](https://developer.bentley.com/apis/overview/authorization/) page.\r\n\r\n### Authorization\r\n\r\nUser must have `imodels_manage` permission assigned at the iModel level and at least `imodels_webview` permission assigned at the Project level. If permissions at the iModel level are not configured, then user must have `imodels_manage` permission assigned at the Project level.\r\n\r\nAlternatively the user should be an Organization Administrator for the Organization that owns a given Project the iModel belongs to.\r\n\r\nAn Organization Administrator must have at least one of the following roles assigned in User Management: Account Administrator, Co-Administrator, or CONNECT Services Administrator. For more information about User Management please visit our Bentley Communities [Licensing, Cloud, and Web Services](https://communities.bentley.com/communities/other_communities/licensing_cloud_and_web_services/w/wiki/50711/user-management-2-0) wiki page.\r\n\r\n### Rate limits\r\n\r\nAll iTwin Platform API operations have a rate limit. For more documentation on that visit [Rate limits and quotas](https://developer.bentley.com/apis/overview/rate-limits/) page.\r\n\r\n---\r\n",
                "operationId": "upload-imodel-thumbnail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "iModel id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "OAuth access token with scope `imodels:modify`",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "Setting to `application/vnd.bentley.itwin-platform.v1+json` is recommended.",
                        "schema": {
                            "enum": [
                                "application/vnd.bentley.itwin-platform.v1+json"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Indicates request body content type.",
                        "required": true,
                        "schema": {
                            "enum": [
                                "image/png",
                                "image/jpeg"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "image/jpeg": {
                            "schema": {
                                "$ref": "#/components/schemas/image"
                            },
                            "example": null
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "This response indicates that request lacks valid authentication credentials. Access token might not been provided, issued by the wrong issuer, does not have required scopes or request headers were malformed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "Unauthorized",
                                        "message": "Access denied due to invalid access_token. Make sure to provide a valid token for this API endpoint."
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "User is not authorized to create a Named Version.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "InsufficientPermissions",
                                        "message": "The user has insufficient permissions for the requested operation."
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Specified iModel was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "iModelNotFound",
                                        "message": "Requested iModel is not available."
                                    }
                                }
                            }
                        }
                    },
                    "413": {
                        "description": "Indicates that the file the user attempted to upload is above the maximum size.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "RequestTooLarge",
                                        "message": "Provided file is greater than the maximum allowed file size of 5MB."
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The 422 (Unprocessable Entity) status code indicates that the request cannot be processed by the server due to a client error (e.g. malformed request syntax)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "InvalidiModelsRequest",
                                        "message": "Cannot upload thumbnail.",
                                        "details": [
                                            {
                                                "code": "InvalidRequestBody",
                                                "message": "Invalid thumbnail format. Please use one of the supported media formats: 'image/jpeg', 'image/png'.",
                                                "innerError": {
                                                    "code": "InvalidThumbnailFormat"
                                                }
                                            },
                                            {
                                                "code": "MissingRequiredHeader",
                                                "message": "Required header is missing.",
                                                "target": "content-type"
                                            },
                                            {
                                                "code": "InvalidHeaderValue",
                                                "message": "'image/gif' is not supported 'content-type'. Supported media types are 'image/jpeg', 'image/png'.",
                                                "target": "content-type"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "This response indicates that the user has sent too many requests in a given amount of time.",
                        "headers": {
                            "retry-after": {
                                "description": "The number of requests exceeds the rate-limit for the client subscription.",
                                "required": true,
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "TooManyRequests",
                                        "message": "More requests were received than the subscription rate-limit allows."
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Thumbnails"
                ],
                "summary": "Download iModel Thumbnail",
                "description": "---\r\n\r\nRetrieves a thumbnail file. Returned thumbnails will be 'image/png' type.\r\n\r\n\r\nOne may specify either the *small* or *large* thumbnail via the *size* query parameter.  If *size* is not specified, the small thumbnail will be returned.\r\n\r\n### Authentication\r\n\r\nRequires `Authorization` header with valid Bearer token for scope `imodels:read`.\r\n\r\nFor more documentation on authorization and how to get access token visit [OAUTH2 Authorization](https://developer.bentley.com/apis/overview/authorization/) page.\r\n\r\n### Authorization\r\n\r\nUser must have `imodels_webview` permission assigned at the iModel level and at least `imodels_webview` permission assigned at the Project level. If permissions at the iModel level are not configured, then user must have `imodels_webview` permission assigned at the Project level.\r\n\r\nAlternatively the user should be an Organization Administrator for the Organization that owns a given Project the iModel belongs to.\r\n\r\nAn Organization Administrator must have at least one of the following roles assigned in User Management: Account Administrator, Co-Administrator, or CONNECT Services Administrator. For more information about User Management please visit our Bentley Communities [Licensing, Cloud, and Web Services](https://communities.bentley.com/communities/other_communities/licensing_cloud_and_web_services/w/wiki/50711/user-management-2-0) wiki page.\r\n\r\n### Rate limits\r\n\r\nAll iTwin Platform API operations have a rate limit. For more documentation on that visit [Rate limits and quotas](https://developer.bentley.com/apis/overview/rate-limits/) page.\r\n\r\n---\r\n",
                "operationId": "get-imodel-thumbnail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "iModel id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "Indicate thumbnail size.  Defaults to *small* if this parameter is not provided or an invalid value is passed.",
                        "schema": {
                            "enum": [
                                "small",
                                "large"
                            ],
                            "type": "string",
                            "default": "small"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "OAuth access token with scope `imodels:read`",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "Setting to `application/vnd.bentley.itwin-platform.v1+json` is recommended.",
                        "schema": {
                            "enum": [
                                "application/vnd.bentley.itwin-platform.v1+json"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "image/png": {
                                "schema": {
                                    "$ref": "#/components/schemas/image"
                                },
                                "example": null
                            }
                        }
                    },
                    "401": {
                        "description": "This response indicates that request lacks valid authentication credentials. Access token might not been provided, issued by the wrong issuer, does not have required scopes or request headers were malformed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "Unauthorized",
                                        "message": "Access denied due to invalid access_token. Make sure to provide a valid token for this API endpoint."
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested iModel is not available.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "iModelNotFound",
                                        "message": "Requested iModel is not available."
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The 422 (Unprocessable Entity) status code indicates that the request cannot be processed by the server due to a client error (e.g. malformed request syntax)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "InvalidiModelsRequest",
                                        "message": "Cannot get thumbnail.",
                                        "details": [
                                            {
                                                "code": "InvalidValue",
                                                "message": "'invalidSize' is not a valid 'size'. Valid 'size' values are: 'small', 'large'.",
                                                "target": "size"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "This response indicates that the user has sent too many requests in a given amount of time.",
                        "headers": {
                            "retry-after": {
                                "description": "The number of requests exceeds the rate-limit for the client subscription.",
                                "required": true,
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "TooManyRequests",
                                        "message": "More requests were received than the subscription rate-limit allows."
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{id}/permissions": {
            "get": {
                "tags": [
                    "Permissions"
                ],
                "summary": "Get iModel User Permissions",
                "description": "---\r\n\r\nRetrieves a list of permissions the user has for the specified iModel. iModels permissions may be configured on a Project level or an iModel level. This operation will return permissions configured for this specific iModel or Project permissions if iModel permissions are not configured.\r\n\r\n`imodels_webview` - allows to view iModel in web browser, but does not allow to get its local copy and view in desktop app.\r\n\r\n`imodels_read` - allows to open and view an iModel only in read-only state.\r\n\r\n`imodels_write` - allows to make changes to an iModel. Allows to create and modify named versions. Allows to create mapping between PW connection and iModel to facilitate bridges.\r\n\r\n`imodels_manage` - allows to create an iModel. Allows to configure access per iModel. Allows to manage locks, codes or local copies for the entire iModel. This permission is both iModel and Project level permission, but Create iModel operation requires that user has `imodels_manage` permission on the Project level. Use Projects API to check if user can create an iModel on a given Project.\r\n\r\n`imodels-delete` - allows to delete an iModel. This permission is only available on the Project level. Use Projects API to check if user can delete iModels on a given Project.\r\n\r\n### Authentication\r\n\r\nRequires `Authorization` header with valid Bearer token for scope `imodels:read`.\r\n\r\nFor more documentation on authorization and how to get access token visit [OAUTH2 Authorization](https://developer.bentley.com/apis/overview/authorization/) page.\r\n\r\n### Authorization\r\n\r\nUser must have `imodels_webview` permission assigned at the iModel level and at least `imodels_webview` permission assigned at the Project level. If permissions at the iModel level are not configured, then user must have `imodels_webview` permission assigned at the Project level.\r\n\r\nAlternatively the user should be an Organization Administrator for the Organization that owns a given Project the iModel belongs to.\r\n\r\nAn Organization Administrator must have at least one of the following roles assigned in User Management: Account Administrator, Co-Administrator, or CONNECT Services Administrator. For more information about User Management please visit our Bentley Communities [Licensing, Cloud, and Web Services](https://communities.bentley.com/communities/other_communities/licensing_cloud_and_web_services/w/wiki/50711/user-management-2-0) wiki page.\r\n\r\n### Rate limits\r\n\r\nAll iTwin Platform API operations have a rate limit. For more documentation on that visit [Rate limits and quotas](https://developer.bentley.com/apis/overview/rate-limits/) page.\r\n\r\n---",
                "operationId": "get-imodel-user-permissions",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "iModel Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "OAuth access token with scope `imodels:read`",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "Setting to `application/vnd.bentley.itwin-platform.v1+json` is recommended.",
                        "schema": {
                            "enum": [
                                "application/vnd.bentley.itwin-platform.v1+json"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Permissions"
                                },
                                "example": {
                                    "permissions": [
                                        "imodels_webview",
                                        "imodels_read",
                                        "imodels_write",
                                        "imodels_manage"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "This response indicates that request lacks valid authentication credentials. Access token might not been provided, issued by the wrong issuer, does not have required scopes or request headers were malformed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "Unauthorized",
                                        "message": "Access denied due to invalid access_token. Make sure to provide a valid token for this API endpoint."
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested iModel is not available.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "iModelNotFound",
                                        "message": "Requested iModel is not available."
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "This response indicates that the user has sent too many requests in a given amount of time.",
                        "headers": {
                            "retry-after": {
                                "description": "The number of requests exceeds the rate-limit for the client subscription.",
                                "required": true,
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "TooManyRequests",
                                        "message": "More requests were received than the subscription rate-limit allows."
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{id}/changesets": {
            "post": {
                "tags": [
                    "Changesets"
                ],
                "summary": "Create iModel Changeset",
                "description": "---\r\n\r\nCreates the metadata of a [Changeset](https://www.itwinjs.org/learning/glossary/#changeset).\r\n\r\nFor more information on creating and retrieving Changesets using iModel.js see [working with Changesets](https://www.itwinjs.org/learning/imodelhub/briefcases/).\r\n\r\n **Important: This operation should only be used by iTwin.js. For creating and uploading a valid Changeset please use iTwin.js libraries.**\r\n\r\nPushing a Changeset consists of three steps:\r\n\r\n1. Create Changeset metadata.\r\n2. Upload Changeset file to blob storage using `upload` property link from the response of Changeset metadata creation.\r\n```\r\nRequest syntax:\r\n    PUT upload HTTP/1.1\r\nRequest headers:\r\n    x-ms-blob-type: BlockBlob\r\n```\r\n\r\n3. Complete the Changeset push by confirming that Changeset file was uploaded successfully. See [Update iModel Changeset](https://developer.bentley.com/apis/imodels/operations/update-imodel-changeset/) operation for the documentation.\r\n\r\n### Authentication\r\n\r\nRequires `Authorization` header with valid Bearer token for scope `imodels:modify`.\r\n\r\nFor more documentation on authorization and how to get access token visit [OAUTH2 Authorization](https://developer.bentley.com/apis/overview/authorization/) page.\r\n\r\n### Authorization\r\n\r\nUser must have `imodels_write` permission assigned at the iModel level and at least `imodels_webview` permission assigned at the Project level. If permissions at the iModel level are not configured, then user must have `imodels_write` permission assigned at the Project level.\r\n\r\nAlternatively the user should be an Organization Administrator for the Organization that owns a given Project the iModel belongs to.\r\n\r\nAn Organization Administrator must have at least one of the following roles assigned in User Management: Account Administrator, Co-Administrator, or CONNECT Services Administrator. For more information about User Management please visit our Bentley Communities [Licensing, Cloud, and Web Services](https://communities.bentley.com/communities/other_communities/licensing_cloud_and_web_services/w/wiki/50711/user-management-2-0) wiki page.\r\n\r\n### Rate limits\r\n\r\nAll iTwin Platform API operations have a rate limit. For more documentation on that visit [Rate limits and quotas](https://developer.bentley.com/apis/overview/rate-limits/) page.\r\n\r\n---",
                "operationId": "create-imodel-changeset",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "iModel id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "OAuth access token with scope `imodels:modify`",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "Setting to `application/vnd.bentley.itwin-platform.v1+json` is recommended.",
                        "schema": {
                            "enum": [
                                "application/vnd.bentley.itwin-platform.v1+json"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Indicates request body content type. Supported media type is `application/json`.",
                        "schema": {
                            "enum": [
                                "application/json"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChangesetCreate"
                            },
                            "example": {
                                "id": "1f2e04b666edce395e37a795e2231e995cbf8349",
                                "description": "Changeset 15",
                                "parentId": "f7618612c572d7db8e3e6095d622d0d8aff22874",
                                "containingChanges": 0,
                                "fileSize": 109,
                                "briefcaseId": 2
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreatedChangesetResponse"
                                },
                                "example": {
                                    "changeset": {
                                        "id": "1f2e04b666edce395e37a795e2231e995cbf8349",
                                        "displayName": "256",
                                        "description": "Changeset 15",
                                        "index": 0,
                                        "parentId": "f7618612c572d7db8e3e6095d622d0d8aff22874",
                                        "state": "waitingForFile",
                                        "containingChanges": 0,
                                        "fileSize": 109,
                                        "briefcaseId": 2,
                                        "creatorId": null,
                                        "pushDateTime": null,
                                        "application": null,
                                        "synchronizationInfo": null,
                                        "_links": {
                                            "creator": null,
                                            "namedVersion": null,
                                            "self": {
                                                "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/changesets/1f2e04b666edce395e37a795e2231e995cbf8349"
                                            },
                                            "upload": {
                                                "href": "https://imodelhub.blob.core.windows.net/imodelhub-5e19bee0-3aea-4355-a9f0-c6df9989ee7d/1f2e04b666edce395e37a795e2231e995cbf8349.cs?sv=2019-07-07&sr=b&sig=IKzMBa%2Be3TjSebXj6rWmDHiG4FEoxtPA2vJUyTVZ%2B%2BI%3D&st=2021-07-30T09%3A02%3A10.1944006Z&se=2021-07-30T09%3A22%3A10.1944012Z&sp=rw"
                                            },
                                            "complete": {
                                                "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/changesets/1f2e04b666edce395e37a795e2231e995cbf8349"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "This response indicates that request lacks valid authentication credentials. Access token might not been provided, issued by the wrong issuer, does not have required scopes or request headers were malformed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "Unauthorized",
                                        "message": "Access denied due to invalid access_token. Make sure to provide a valid token for this API endpoint."
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "User is not authorized to create a Changeset.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "InsufficientPermissions",
                                        "message": "The user has insufficient permissions for the requested operation."
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Specified iModel or Briefcase was not found.",
                        "content": {
                            "application/json;iModelNotFound": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "iModelNotFound",
                                        "message": "Requested iModel is not available."
                                    }
                                }
                            },
                            "application/json;BriefcaseNotFound": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "BriefcaseNotFound",
                                        "message": "Requested Briefcase is not available."
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Changeset with the same id already exists, 'parentId' property value does not point to the latest changes or another user is currently in a process of pushing a changeset.",
                        "content": {
                            "application/json;NewerChangesExist": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "NewerChangesExist",
                                        "message": "'parentId' does not match latest Changeset."
                                    }
                                }
                            },
                            "application/json;ChangesetExists": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "ChangesetExists",
                                        "message": "Changeset with the same id already exists within the iModel."
                                    }
                                }
                            },
                            "application/json;ConflictWithAnotherUser": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "ConflictWithAnotherUser",
                                        "message": "Another user is pushing a Changeset."
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The 422 (Unprocessable Entity) status code indicates that the request cannot be processed by the server due to a client error (e.g. malformed request syntax)",
                        "content": {
                            "application/json;InvalidiModelsRequest": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "InvalidiModelsRequest",
                                        "message": "Cannot create Changeset.",
                                        "details": [
                                            {
                                                "code": "InvalidValue",
                                                "message": "Provided 'fileSize' value is not valid. 'fileSize' must be a non-negative integer value.",
                                                "target": "fileSize"
                                            },
                                            {
                                                "code": "MissingRequiredProperty",
                                                "message": "Required property is missing.",
                                                "target": "id"
                                            },
                                            {
                                                "code": "InvalidRequestBody",
                                                "message": "Failed to parse request body. Make sure it is a valid JSON."
                                            }
                                        ]
                                    }
                                }
                            },
                            "application/json;MissingRequestBody": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "MissingRequestBody",
                                        "message": "Request body was not provided."
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "This response indicates that the user has sent too many requests in a given amount of time.",
                        "headers": {
                            "retry-after": {
                                "description": "The number of requests exceeds the rate-limit for the client subscription.",
                                "required": true,
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "TooManyRequests",
                                        "message": "More requests were received than the subscription rate-limit allows."
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Changesets"
                ],
                "summary": "Get iModel Changesets",
                "description": "---\r\n\r\nRetrieves a list of [Changesets](https://www.itwinjs.org/learning/glossary/#changeset) for the iModel specified by the iModel id.\r\n\r\n[Changesets](https://www.itwinjs.org/learning/glossary/#changeset) form a linear timeline of the iModel changes. \r\nFor more information on creating and retrieving Changesets using iModel.js see [working with Changesets](https://www.itwinjs.org/learning/imodelhub/briefcases/).\r\n\r\n### Notes\r\n\r\nThe `Prefer` header can be used to specify how much result metadata is desired by the client. The `Prefer` request header field is used to indicate that particular server behaviors are preferred by the client but are not required for successful completion of the request.\r\n\r\nThis operation supports `\"return=representation\"` and `\"return=minimal\"` preferences.\r\n\r\nThe `\"return=representation\"` preference indicates that the client prefers that the server include an entity representing the current state of the resource in the response to a successful request.\r\nThe `\"return=minimal\"` preference indicates that the client wishes the server to return only a minimal response to a successful request. This is the default preference if `Prefer` header is not specified.\r\n\r\n### Authentication\r\n\r\nRequires `Authorization` header with valid Bearer token for scope `imodels:read`.\r\n\r\nFor more documentation on authorization and how to get access token visit [OAUTH2 Authorization](https://developer.bentley.com/apis/overview/authorization/) page.\r\n\r\n### Authorization\r\n\r\nUser must have `imodels_webview` permission assigned at the iModel level and at least `imodels_webview` permission assigned at the Project level. If permissions at the iModel level are not configured, then user must have `imodels_webview` permission assigned at the Project level.\r\n\r\nAlternatively the user should be an Organization Administrator for the Organization that owns a given Project the iModel belongs to.\r\n\r\nAn Organization Administrator must have at least one of the following roles assigned in User Management: Account Administrator, Co-Administrator, or CONNECT Services Administrator. For more information about User Management please visit our Bentley Communities [Licensing, Cloud, and Web Services](https://communities.bentley.com/communities/other_communities/licensing_cloud_and_web_services/w/wiki/50711/user-management-2-0) wiki page.\r\n\r\n**Note:** `download` property requires user to have at least `imodels_read` permission. If user has only `imodels_webview` permission `download` will always be null.\r\n\r\n### Rate limits\r\n\r\nAll iTwin Platform API operations have a rate limit. For more documentation on that visit [Rate limits and quotas](https://developer.bentley.com/apis/overview/rate-limits/) page.\r\n\r\n---\r\n",
                "operationId": "get-imodel-changesets",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "iModel id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "The $top query option requests the number of items in the queried collection to be included in the result. E.g. to return only first collection item provide the following query: $top=1. When $top parameter is not provided default is set to 100. $top value cannot exceed 1000.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "The $skip query option requests the number of items in the queried collection that are to be skipped and not included in the result. E.g. to return items from the collection starting at the third place provide the following query: $skip=2.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "$orderBy",
                        "in": "query",
                        "description": "The $orderBy query option allows clients to request ascending using 'asc' or descending using 'desc' order of the returned collection by one of the item properties. Currently the only supported property for Changesets is 'index'. When neither 'asc' or 'desc' keyword is specified the collection is sorted in ascending order. To sort the collection in descending order provide 'desc' keyword e.g.: $orderBy=index desc",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "afterIndex",
                        "in": "query",
                        "description": "The afterIndex query option allows clients to query Changesets which have an index that is greater than the one specified in the query. E.g. to return Changesets that have an index greater than or equal to 2 provide the following query: afterIndex=1. This query option is useful when user wants to query the most recent Changesets starting from the one that is already present in the local copy of the iModel. This can be used together with lastIndex option to specify Changeset index range, afterIndex denotes an exclusive start of the range.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "lastIndex",
                        "in": "query",
                        "description": "The lastIndex query option allows clients to query Changesets which have an index that is less than or equal to the one specified in the query. E.g. to return Changesets that have an index less than or equal to 10 provide the following query: lastIndex=10. This can be used together with afterIndex option to specify Changeset index range, lastIndex denotes an inclusive end of the range.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "OAuth access token with scope `imodels:read`",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "Setting to `application/vnd.bentley.itwin-platform.v1+json` is recommended.",
                        "schema": {
                            "enum": [
                                "application/vnd.bentley.itwin-platform.v1+json"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "Prefer",
                        "in": "header",
                        "description": "Indicates a level of details in the response. This operation supports 'return=representation' and 'return=minimal' preferences.",
                        "schema": {
                            "enum": [
                                "return=minimal",
                                "return=representation"
                            ],
                            "type": "string",
                            "default": "return=minimal"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json;minimal": {
                                "schema": {
                                    "$ref": "#/components/schemas/ChangesetsMinimal"
                                },
                                "example": {
                                    "changesets": [
                                        {
                                            "id": "a1ecbdc8c4f6173004f9f881914a57c5511a362b",
                                            "displayName": "1",
                                            "description": "Changeset 0",
                                            "index": 1,
                                            "parentId": "",
                                            "creatorId": "ea4dfb9f-7f66-4c6f-82c5-0efad1636a1f",
                                            "pushDateTime": "2020-10-21T06:34:45.007+00:00",
                                            "state": "fileUploaded",
                                            "containingChanges": 0,
                                            "fileSize": 109,
                                            "briefcaseId": 2,
                                            "_links": {
                                                "creator": {
                                                    "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/users/ea4dfb9f-7f66-4c6f-82c5-0efad1636a1f"
                                                },
                                                "self": {
                                                    "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/changesets/a1ecbdc8c4f6173004f9f881914a57c5511a362b"
                                                }
                                            }
                                        },
                                        {
                                            "id": "7caef8ab5afcd99c9e618fb37978c3a03d0409c7",
                                            "displayName": "2",
                                            "description": "Changeset 1",
                                            "index": 2,
                                            "parentId": "a1ecbdc8c4f6173004f9f881914a57c5511a362b",
                                            "creatorId": "ea4dfb9f-7f66-4c6f-82c5-0efad1636a1f",
                                            "pushDateTime": "2020-10-21T06:34:48.123+00:00",
                                            "state": "fileUploaded",
                                            "containingChanges": 0,
                                            "fileSize": 139,
                                            "briefcaseId": 2,
                                            "_links": {
                                                "creator": {
                                                    "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/users/ea4dfb9f-7f66-4c6f-82c5-0efad1636a1f"
                                                },
                                                "self": {
                                                    "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/changesets/7caef8ab5afcd99c9e618fb37978c3a03d0409c7"
                                                }
                                            }
                                        },
                                        {
                                            "id": "a587345859410ce5c2811c7c558d4578938efa00",
                                            "displayName": "3",
                                            "description": "Changeset 2",
                                            "index": 3,
                                            "parentId": "7caef8ab5afcd99c9e618fb37978c3a03d0409c7",
                                            "creatorId": "27e3ecc7-ae44-4c9d-b0b5-2f65ec146f1d",
                                            "pushDateTime": "2020-10-21T06:34:51.13+00:00",
                                            "state": "fileUploaded",
                                            "containingChanges": 2,
                                            "fileSize": 109,
                                            "briefcaseId": 2,
                                            "_links": {
                                                "creator": {
                                                    "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/users/27e3ecc7-ae44-4c9d-b0b5-2f65ec146f1d"
                                                },
                                                "self": {
                                                    "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/changesets/a587345859410ce5c2811c7c558d4578938efa00"
                                                }
                                            }
                                        },
                                        {
                                            "id": "13a61888798b687d41f7c748d7414b428766281f",
                                            "displayName": "4",
                                            "description": "Changeset 3",
                                            "index": 4,
                                            "parentId": "a587345859410ce5c2811c7c558d4578938efa00",
                                            "creatorId": "27e3ecc7-ae44-4c9d-b0b5-2f65ec146f1d",
                                            "pushDateTime": "2020-10-21T06:34:54.13+00:00",
                                            "state": "fileUploaded",
                                            "containingChanges": 18,
                                            "fileSize": 109,
                                            "briefcaseId": 2,
                                            "_links": {
                                                "creator": {
                                                    "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/users/27e3ecc7-ae44-4c9d-b0b5-2f65ec146f1d"
                                                },
                                                "self": {
                                                    "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/changesets/13a61888798b687d41f7c748d7414b428766281f"
                                                }
                                            }
                                        }
                                    ],
                                    "_links": {
                                        "self": {
                                            "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/changesets?$skip=100&$top=100"
                                        },
                                        "prev": {
                                            "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/changesets?$skip=0&$top=100"
                                        },
                                        "next": {
                                            "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/changesets?$skip=200&$top=100"
                                        }
                                    }
                                }
                            },
                            "application/json;representation": {
                                "schema": {
                                    "$ref": "#/components/schemas/ChangesetsRepresentation"
                                },
                                "example": {
                                    "changesets": [
                                        {
                                            "id": "a1ecbdc8c4f6173004f9f881914a57c5511a362b",
                                            "displayName": "1",
                                            "description": "Changeset 0",
                                            "index": 1,
                                            "parentId": "",
                                            "creatorId": "ea4dfb9f-7f66-4c6f-82c5-0efad1636a1f",
                                            "pushDateTime": "2020-10-21T06:34:45.007+00:00",
                                            "state": "fileUploaded",
                                            "containingChanges": 0,
                                            "fileSize": 109,
                                            "briefcaseId": 2,
                                            "application": {
                                                "name": "iTwin Synchronizer"
                                            },
                                            "synchronizationInfo": {
                                                "changedFiles": [
                                                    "File1.dgn",
                                                    "File2.dgn"
                                                ]
                                            },
                                            "_links": {
                                                "creator": {
                                                    "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/users/ea4dfb9f-7f66-4c6f-82c5-0efad1636a1f"
                                                },
                                                "namedVersion": {
                                                    "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/namedversions/a9f63fc0-ecab-440b-ba59-1a617e15f543"
                                                },
                                                "self": {
                                                    "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/changesets/a1ecbdc8c4f6173004f9f881914a57c5511a362b"
                                                },
                                                "download": {
                                                    "href": "https://imodelhub.blob.core.windows.net/imodelhub-5e19bee0-3aea-4355-a9f0-c6df9989ee7d/a1ecbdc8c4f6173004f9f881914a57c5511a362b.cs?sv=2019-07-07&sr=b&sig=ByGsPs4cwKyUfnV6%2BjDZFDL3J7QiE0vl917MCX%2FC35Y%3D&st=2021-07-30T10%3A53%3A09.5224547Z&se=2021-07-30T11%3A13%3A09.5224552Z&sp=r"
                                                }
                                            }
                                        },
                                        {
                                            "id": "7caef8ab5afcd99c9e618fb37978c3a03d0409c7",
                                            "displayName": "2",
                                            "description": "Changeset 1",
                                            "index": 2,
                                            "parentId": "a1ecbdc8c4f6173004f9f881914a57c5511a362b",
                                            "creatorId": "ea4dfb9f-7f66-4c6f-82c5-0efad1636a1f",
                                            "pushDateTime": "2020-10-21T06:34:48.123+00:00",
                                            "state": "fileUploaded",
                                            "containingChanges": 0,
                                            "fileSize": 139,
                                            "briefcaseId": 2,
                                            "application": {
                                                "name": "iTwin Synchronizer"
                                            },
                                            "synchronizationInfo": {
                                                "changedFiles": [
                                                    "File1.dgn"
                                                ]
                                            },
                                            "_links": {
                                                "creator": {
                                                    "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/users/ea4dfb9f-7f66-4c6f-82c5-0efad1636a1f"
                                                },
                                                "namedVersion": null,
                                                "self": {
                                                    "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/changesets/7caef8ab5afcd99c9e618fb37978c3a03d0409c7"
                                                },
                                                "download": {
                                                    "href": "https://imodelhub.blob.core.windows.net/imodelhub-5e19bee0-3aea-4355-a9f0-c6df9989ee7d/7caef8ab5afcd99c9e618fb37978c3a03d0409c7.cs?sv=2019-07-07&sr=b&sig=ByGsPs4cwKyUfnV6%2BjDZFDL3J7QiE0vl917MCX%2FC35Y%3D&st=2021-07-30T10%3A53%3A09.5224547Z&se=2021-07-30T11%3A13%3A09.5224552Z&sp=r"
                                                }
                                            }
                                        },
                                        {
                                            "id": "a587345859410ce5c2811c7c558d4578938efa00",
                                            "displayName": "3",
                                            "description": "Changeset 2",
                                            "index": 3,
                                            "parentId": "7caef8ab5afcd99c9e618fb37978c3a03d0409c7",
                                            "creatorId": "27e3ecc7-ae44-4c9d-b0b5-2f65ec146f1d",
                                            "pushDateTime": "2020-10-21T06:34:51.13+00:00",
                                            "state": "fileUploaded",
                                            "containingChanges": 2,
                                            "fileSize": 109,
                                            "briefcaseId": 2,
                                            "application": {
                                                "name": "Synchro Modeler"
                                            },
                                            "synchronizationInfo": null,
                                            "_links": {
                                                "creator": {
                                                    "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/users/27e3ecc7-ae44-4c9d-b0b5-2f65ec146f1d"
                                                },
                                                "namedVersion": null,
                                                "self": {
                                                    "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/changesets/a587345859410ce5c2811c7c558d4578938efa00"
                                                },
                                                "download": {
                                                    "href": "https://imodelhub.blob.core.windows.net/imodelhub-5e19bee0-3aea-4355-a9f0-c6df9989ee7d/a587345859410ce5c2811c7c558d4578938efa00.cs?sv=2019-07-07&sr=b&sig=ByGsPs4cwKyUfnV6%2BjDZFDL3J7QiE0vl917MCX%2FC35Y%3D&st=2021-07-30T10%3A53%3A09.5224547Z&se=2021-07-30T11%3A13%3A09.5224552Z&sp=r"
                                                }
                                            }
                                        },
                                        {
                                            "id": "13a61888798b687d41f7c748d7414b428766281f",
                                            "displayName": "4",
                                            "description": "Changeset 3",
                                            "index": 4,
                                            "parentId": "a587345859410ce5c2811c7c558d4578938efa00",
                                            "creatorId": "27e3ecc7-ae44-4c9d-b0b5-2f65ec146f1d",
                                            "pushDateTime": "2020-10-21T06:34:54.13+00:00",
                                            "state": "fileUploaded",
                                            "containingChanges": 18,
                                            "fileSize": 109,
                                            "briefcaseId": 2,
                                            "application": {
                                                "name": "Synchro Modeler"
                                            },
                                            "synchronizationInfo": null,
                                            "_links": {
                                                "creator": {
                                                    "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/users/27e3ecc7-ae44-4c9d-b0b5-2f65ec146f1d"
                                                },
                                                "namedVersion": {
                                                    "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/namedversions/2c35f213-8d83-44b9-b20f-750b81502121"
                                                },
                                                "self": {
                                                    "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/changesets/13a61888798b687d41f7c748d7414b428766281f"
                                                },
                                                "download": {
                                                    "href": "https://imodelhub.blob.core.windows.net/imodelhub-5e19bee0-3aea-4355-a9f0-c6df9989ee7d/13a61888798b687d41f7c748d7414b428766281f.cs?sv=2019-07-07&sr=b&sig=ByGsPs4cwKyUfnV6%2BjDZFDL3J7QiE0vl917MCX%2FC35Y%3D&st=2021-07-30T10%3A53%3A09.5224547Z&se=2021-07-30T11%3A13%3A09.5224552Z&sp=r"
                                                }
                                            }
                                        }
                                    ],
                                    "_links": {
                                        "self": {
                                            "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/changesets?$skip=100&$top=100"
                                        },
                                        "prev": {
                                            "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/changesets?$skip=0&$top=100"
                                        },
                                        "next": {
                                            "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/changesets?$skip=200&$top=100"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "This response indicates that request lacks valid authentication credentials. Access token might not been provided, issued by the wrong issuer, does not have required scopes or request headers were malformed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "Unauthorized",
                                        "message": "Access denied due to invalid access_token. Make sure to provide a valid token for this API endpoint."
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested iModel is not available.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "iModelNotFound",
                                        "message": "Requested iModel is not available."
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The 422 (Unprocessable Entity) status code indicates that the request cannot be processed by the server due to a client error (e.g. malformed request syntax)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "InvalidiModelsRequest",
                                        "message": "Cannot get Changesets.",
                                        "details": [
                                            {
                                                "code": "InvalidValue",
                                                "message": "'-1' is not a valid '$skip' value. '$skip' must be a non-negative integer.",
                                                "target": "$skip"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "This response indicates that the user has sent too many requests in a given amount of time.",
                        "headers": {
                            "retry-after": {
                                "description": "The number of requests exceeds the rate-limit for the client subscription.",
                                "required": true,
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "TooManyRequests",
                                        "message": "More requests were received than the subscription rate-limit allows."
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{id}/baselinefile": {
            "post": {
                "tags": [
                    "Baseline Files"
                ],
                "summary": "Complete iModel Baseline File Upload",
                "description": "---\r\n\r\nComplete [iModel](https://www.itwinjs.org/learning/glossary/#imodel) creation from Baseline File by confirming that file was uploaded to file storage.\r\n\r\n Baseline File is the base iModel file that does not have any changesets applied. For creating an iModel from a custom Baseline File see [Create iModel using a Baseline File](https://developer.bentley.com/apis/imodels/operations/create-imodel/#createanimodelusingabaselinefile).\r\n\r\n### Authentication\r\n\r\nRequires `Authorization` header with valid Bearer token for scope `imodels:modify`.\r\n\r\nFor more documentation on authorization and how to get access token visit [OAUTH2 Authorization](https://developer.bentley.com/apis/overview/authorization/) page.\r\n\r\n### Authorization\r\n\r\nUser must be an Organization Administrator for the Organization that owns a given Project or have `imodels_manage` permission assigned at the Project level.\r\n\r\nAn Organization Administrator must have at least one of the following roles assigned in User Management: Account Administrator, Co-Administrator, or CONNECT Services Administrator. For more information about User Management please visit our Bentley Communities [Licensing, Cloud, and Web Services](https://communities.bentley.com/communities/other_communities/licensing_cloud_and_web_services/w/wiki/50711/user-management-2-0) wiki page.\r\n\r\n### Rate limits\r\n\r\nAll iTwin Platform API operations have a rate limit. For more documentation on that visit [Rate limits and quotas](https://developer.bentley.com/apis/overview/rate-limits/) page.\r\n\r\n---\r\n",
                "operationId": "complete-imodel-baseline-file-upload",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "iModel Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "OAuth access token with scope `imodels:modify`",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "Setting to `application/vnd.bentley.itwin-platform.v1+json` is recommended.",
                        "schema": {
                            "enum": [
                                "application/vnd.bentley.itwin-platform.v1+json"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaselineFileResponse"
                                },
                                "example": {
                                    "baselineFile": {
                                        "id": "5e19bee0-3aea-4355-a9f0-c6df9989ee7d",
                                        "displayName": "5e19bee0-3aea-4355-a9f0-c6df9989ee7d.bim",
                                        "fileSize": 12563,
                                        "state": "initializationScheduled",
                                        "_links": {
                                            "creator": {
                                                "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/users/42101fba-847a-4f4e-85a8-a4bed89065e4"
                                            },
                                            "download": null
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "This response indicates that request lacks valid authentication credentials. Access token might not been provided, issued by the wrong issuer, does not have required scopes or request headers were malformed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "Unauthorized",
                                        "message": "Access denied due to invalid access_token. Make sure to provide a valid token for this API endpoint."
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "User is not authorized to complete Baseline File upload.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "InsufficientPermissions",
                                        "message": "The user has insufficient permissions for the requested operation."
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Specified iModel was not found, it does not have an associated Baseline File entity or the file was not uploaded to the storage.",
                        "content": {
                            "application/json;iModelNotFound": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "iModelNotFound",
                                        "message": "Requested iModel is not available."
                                    }
                                }
                            },
                            "application/json;BaselineFileNotFound": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "FileNotFound",
                                        "message": "Requested file is not available. File was not uploaded to file storage."
                                    }
                                }
                            },
                            "application/json;FileNotFound": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "FileNotFound",
                                        "message": "Requested file is not available. File was not uploaded to file storage."
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "File size specified during iModel creation does not match the actual file size of the uploaded file.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "DataConflict",
                                        "message": "File size provided during iModel creation does not match actual file size."
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The 422 (Unprocessable Entity) status code indicates that the request cannot be processed by the server due to a client error (e.g. malformed request syntax)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "InvalidiModelsRequest",
                                        "message": "Cannot complete Baseline File upload.",
                                        "details": [
                                            {
                                                "code": "InvalidChange",
                                                "message": "Baseline File upload is not in progress."
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "This response indicates that the user has sent too many requests in a given amount of time.",
                        "headers": {
                            "retry-after": {
                                "description": "The number of requests exceeds the rate-limit for the client subscription.",
                                "required": true,
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "TooManyRequests",
                                        "message": "More requests were received than the subscription rate-limit allows."
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Baseline Files"
                ],
                "summary": "Get iModel Baseline File Details",
                "description": "---\r\n\r\nRetrieves the metadata of a Baseline File. Baseline File is the base iModel file that does not have any changesets applied.\r\n\r\n### Authentication\r\n\r\nRequires `Authorization` header with valid Bearer token for scope `imodels:read`.\r\n\r\nFor more documentation on authorization and how to get access token visit [OAUTH2 Authorization](https://developer.bentley.com/apis/overview/authorization/) page.\r\n\r\n### Authorization\r\n\r\nUser must have `imodels_webview` permission assigned at the iModel level and at least `imodels_webview` permission assigned at the Project level. If permissions at the iModel level are not configured, then user must have `imodels_webview` permission assigned at the Project level.\r\n\r\nAlternatively the user should be an Organization Administrator for the Organization that owns a given Project the iModel belongs to.\r\n\r\nAn Organization Administrator must have at least one of the following roles assigned in User Management: Account Administrator, Co-Administrator, or CONNECT Services Administrator. For more information about User Management please visit our Bentley Communities [Licensing, Cloud, and Web Services](https://communities.bentley.com/communities/other_communities/licensing_cloud_and_web_services/w/wiki/50711/user-management-2-0) wiki page.\r\n\r\n**Note:** `download` property requires user to have at least `imodels_read` permission. If user has only `imodels_webview` permission `download` will always be null.\r\n\r\n### Rate limits\r\n\r\nAll iTwin Platform API operations have a rate limit. For more documentation on that visit [Rate limits and quotas](https://developer.bentley.com/apis/overview/rate-limits/) page.\r\n\r\n---\r\n",
                "operationId": "get-imodel-baseline-file-details",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "iModel Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "OAuth access token with scope `imodels:read`",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "Setting to `application/vnd.bentley.itwin-platform.v1+json` is recommended.",
                        "schema": {
                            "enum": [
                                "application/vnd.bentley.itwin-platform.v1+json"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaselineFileResponse"
                                },
                                "example": {
                                    "baselineFile": {
                                        "id": "5e19bee0-3aea-4355-a9f0-c6df9989ee7d",
                                        "displayName": "5e19bee0-3aea-4355-a9f0-c6df9989ee7d.bim",
                                        "fileSize": 12563,
                                        "state": "initialized",
                                        "_links": {
                                            "creator": {
                                                "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/users/42101fba-847a-4f4e-85a8-a4bed89065e4"
                                            },
                                            "download": {
                                                "href": "https://imodelhub.blob.core.windows.net/imodelhub-5e19bee0-3aea-4355-a9f0-c6df9989ee7d/5e19bee0-3aea-4355-a9f0-c6df9989ee7d.bim?sv=2019-07-07&sr=b&sig=ByGsPs4cwKyUfnV6%2BjDZFDL3J7QiE0vl917MCX%2FC35Y%3D&st=2021-07-30T10%3A53%3A09.5224547Z&se=2021-07-30T11%3A13%3A09.5224552Z&sp=r"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "This response indicates that request lacks valid authentication credentials. Access token might not been provided, issued by the wrong issuer, does not have required scopes or request headers were malformed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "Unauthorized",
                                        "message": "Access denied due to invalid access_token. Make sure to provide a valid token for this API endpoint."
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Specified iModel was not found or it does not have an associated Baseline File entity.",
                        "content": {
                            "application/json;iModelNotFound": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "iModelNotFound",
                                        "message": "Requested iModel is not available."
                                    }
                                }
                            },
                            "application/json;BaselineFileNotFound": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "BaselineFileNotFound",
                                        "message": "Requested Baseline File is not available."
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "This response indicates that the user has sent too many requests in a given amount of time.",
                        "headers": {
                            "retry-after": {
                                "description": "The number of requests exceeds the rate-limit for the client subscription.",
                                "required": true,
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "TooManyRequests",
                                        "message": "More requests were received than the subscription rate-limit allows."
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{id}": {
            "patch": {
                "tags": [
                    "iModels"
                ],
                "summary": "Update iModel",
                "description": "---\r\n\r\nUpdate metadata of the [iModel](https://www.itwinjs.org/learning/glossary/#imodel).\r\n\r\n### Authentication\r\n\r\nRequires `Authorization` header with valid Bearer token for scope `imodels:modify`.\r\n\r\nFor more documentation on authorization and how to get access token visit [OAUTH2 Authorization](https://developer.bentley.com/apis/overview/authorization/) page.\r\n\r\n### Authorization\r\n\r\nUser must have `imodels_manage` permission assigned at the iModel level and at least `imodels_webview` permission assigned at the Project level. If permissions at the iModel level are not configured, then user must have `imodels_manage` permission assigned at the Project level.\r\n\r\nAlternatively the user should be an Organization Administrator for the Organization that owns a given Project the iModel belongs to.\r\n\r\nAn Organization Administrator must have at least one of the following roles assigned in User Management: Account Administrator, Co-Administrator, or CONNECT Services Administrator. For more information about User Management please visit our Bentley Communities [Licensing, Cloud, and Web Services](https://communities.bentley.com/communities/other_communities/licensing_cloud_and_web_services/w/wiki/50711/user-management-2-0) wiki page.\r\n\r\n### Rate limits\r\n\r\nAll iTwin Platform API operations have a rate limit. For more documentation on that visit [Rate limits and quotas](https://developer.bentley.com/apis/overview/rate-limits/) page.\r\n\r\n---\r\n",
                "operationId": "update-imodel",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "iModel id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "OAuth access token with scope `imodels:modify`",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "Setting to `application/vnd.bentley.itwin-platform.v1+json` is recommended.",
                        "schema": {
                            "enum": [
                                "application/vnd.bentley.itwin-platform.v1+json"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Indicates request body content type. Supported media type is `application/json`.",
                        "schema": {
                            "enum": [
                                "application/json"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/iModelUpdate"
                            },
                            "example": {
                                "name": "Sun City Renewable-energy Plant",
                                "description": "Overall model of wind and solar farms in Sun City",
                                "extent": {
                                    "southWest": {
                                        "latitude": 46.1326770283481,
                                        "longitude": 7.67212000993845
                                    },
                                    "northEast": {
                                        "latitude": 46.3027639547812,
                                        "longitude": 7.83554164079782
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/iModelResponse"
                                },
                                "example": {
                                    "iModel": {
                                        "id": "5e19bee0-3aea-4355-a9f0-c6df9989ee7d",
                                        "displayName": "Sun City Renewable-energy Plant",
                                        "name": "Sun City Renewable-energy Plant",
                                        "description": "Overall model of wind and solar farms in Sun City",
                                        "state": "initialized",
                                        "createdDateTime": "2020-10-20T10:51:33.17+00:00",
                                        "projectId": "ad0ba809-9241-48ad-9eb0-c8038c1a1d51",
                                        "extent": {
                                            "southWest": {
                                                "latitude": 46.1326770283481,
                                                "longitude": 7.67212000993845
                                            },
                                            "northEast": {
                                                "latitude": 46.3027639547812,
                                                "longitude": 7.83554164079782
                                            }
                                        },
                                        "_links": {
                                            "creator": {
                                                "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/users/42101fba-847a-4f4e-85a8-a4bed89065e4"
                                            },
                                            "changesets": {
                                                "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/changesets"
                                            },
                                            "namedVersions": {
                                                "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/namedversions"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "This response indicates that request lacks valid authentication credentials. Access token might not been provided, issued by the wrong issuer, does not have required scopes or request headers were malformed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "Unauthorized",
                                        "message": "Access denied due to invalid access_token. Make sure to provide a valid token for this API endpoint."
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "User is not authorized to update an iModel.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "InsufficientPermissions",
                                        "message": "The user has insufficient permissions for the requested operation."
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested iModel is not available.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "iModelNotFound",
                                        "message": "Requested iModel is not available."
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "iModel with the same name already exists within the project.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "iModelExists",
                                        "message": "iModel with the same name already exists within the project."
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The 422 (Unprocessable Entity) status code indicates that the request cannot be processed by the server due to a client error (e.g. malformed request syntax)",
                        "content": {
                            "application/json;InvalidiModelsRequest": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "InvalidiModelsRequest",
                                        "message": "Cannot update iModel.",
                                        "details": [
                                            {
                                                "code": "InvalidValue",
                                                "message": "Provided 'extent' value is not valid. Valid 'latitude' value range is -90 to 90.",
                                                "target": "extent"
                                            },
                                            {
                                                "code": "InvalidHeaderValue",
                                                "message": "'application/xml' is not supported 'content-type'. Supported media type is 'application/json'.",
                                                "target": "content-type"
                                            },
                                            {
                                                "code": "MissingRequiredProperty",
                                                "message": "Required property is missing. At least one of the following properties must be provided: 'extent', 'name', 'description'."
                                            },
                                            {
                                                "code": "InvalidRequestBody",
                                                "message": "Failed to parse request body. Make sure it is a valid JSON."
                                            }
                                        ]
                                    }
                                }
                            },
                            "application/json;MissingRequestBody": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "MissingRequestBody",
                                        "message": "Request body was not provided."
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "This response indicates that the user has sent too many requests in a given amount of time.",
                        "headers": {
                            "retry-after": {
                                "description": "The number of requests exceeds the rate-limit for the client subscription.",
                                "required": true,
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "TooManyRequests",
                                        "message": "More requests were received than the subscription rate-limit allows."
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "iModels"
                ],
                "summary": "Delete iModel",
                "description": "---\r\n\r\nDeletes [iModel](https://www.itwinjs.org/learning/glossary/#imodel).\r\n\r\n### Authentication\r\n\r\nRequires `Authorization` header with valid Bearer token for scope `imodels:modify`.\r\n\r\nFor more documentation on authorization and how to get access token visit [OAUTH2 Authorization](https://developer.bentley.com/apis/overview/authorization/) page.\r\n\r\n### Authorization\r\n\r\nUser must be an Organization Administrator for the Organization that owns a given Project or have `imodels_delete` permission assigned at the Project level.\r\n\r\nAn Organization Administrator must have at least one of the following roles assigned in User Management: Account Administrator, Co-Administrator, or CONNECT Services Administrator. For more information about User Management please visit our Bentley Communities [Licensing, Cloud, and Web Services](https://communities.bentley.com/communities/other_communities/licensing_cloud_and_web_services/w/wiki/50711/user-management-2-0) wiki page.\r\n\r\n### Rate limits\r\n\r\nAll iTwin Platform API operations have a rate limit. For more documentation on that visit [Rate limits and quotas](https://developer.bentley.com/apis/overview/rate-limits/) page.\r\n\r\n---\r\n",
                "operationId": "delete-imodel",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "iModel id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "OAuth access token with scope `imodels:modify`",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "Setting to `application/vnd.bentley.itwin-platform.v1+json` is recommended.",
                        "schema": {
                            "enum": [
                                "application/vnd.bentley.itwin-platform.v1+json"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "This response indicates that request lacks valid authentication credentials. Access token might not been provided, issued by the wrong issuer, does not have required scopes or request headers were malformed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "Unauthorized",
                                        "message": "Access denied due to invalid access_token. Make sure to provide a valid token for this API endpoint."
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "User is not authorized to delete an iModel.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "InsufficientPermissions",
                                        "message": "The user has insufficient permissions for the requested operation."
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Specified iModel was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "iModelNotFound",
                                        "message": "Requested iModel is not available."
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "This response indicates that the user has sent too many requests in a given amount of time.",
                        "headers": {
                            "retry-after": {
                                "description": "The number of requests exceeds the rate-limit for the client subscription.",
                                "required": true,
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "TooManyRequests",
                                        "message": "More requests were received than the subscription rate-limit allows."
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "iModels"
                ],
                "summary": "Get iModel",
                "description": "---\r\n\r\nRetrieves the metadata of an [iModel](https://www.itwinjs.org/learning/glossary/#imodel).\r\n\r\n### Authentication\r\n\r\nRequires `Authorization` header with valid Bearer token for scope `imodels:read`.\r\n\r\nFor more documentation on authorization and how to get access token visit [OAUTH2 Authorization](https://developer.bentley.com/apis/overview/authorization/) page.\r\n\r\n### Authorization\r\n\r\nUser must have `imodels_webview` permission assigned at the iModel level and at least `imodels_webview` permission assigned at the Project level. If permissions at the iModel level are not configured, then user must have `imodels_webview` permission assigned at the Project level.\r\n\r\nAlternatively the user should be an Organization Administrator for the Organization that owns a given Project the iModel belongs to.\r\n\r\nAn Organization Administrator must have at least one of the following roles assigned in User Management: Account Administrator, Co-Administrator, or CONNECT Services Administrator. For more information about User Management please visit our Bentley Communities [Licensing, Cloud, and Web Services](https://communities.bentley.com/communities/other_communities/licensing_cloud_and_web_services/w/wiki/50711/user-management-2-0) wiki page.\r\n\r\n### Rate limits\r\n\r\nAll iTwin Platform API operations have a rate limit. For more documentation on that visit [Rate limits and quotas](https://developer.bentley.com/apis/overview/rate-limits/) page.\r\n\r\n---\r\n",
                "operationId": "get-imodel-details",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "iModel id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "OAuth access token with scope `imodels:read`",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "Setting to `application/vnd.bentley.itwin-platform.v1+json` is recommended.",
                        "schema": {
                            "enum": [
                                "application/vnd.bentley.itwin-platform.v1+json"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/iModelResponse"
                                },
                                "example": {
                                    "iModel": {
                                        "id": "5e19bee0-3aea-4355-a9f0-c6df9989ee7d",
                                        "displayName": "Sun City Renewable-energy Plant",
                                        "name": "Sun City Renewable-energy Plant",
                                        "description": "Overall model of wind and solar farms in Sun City",
                                        "state": "initialized",
                                        "createdDateTime": "2020-10-20T10:51:33.17+00:00",
                                        "projectId": "5e19bee0-3aea-4355-a9f0-c6df9989ee7d",
                                        "extent": {
                                            "southWest": {
                                                "latitude": 46.1326770283481,
                                                "longitude": 7.67212000993845
                                            },
                                            "northEast": {
                                                "latitude": 46.3027639547812,
                                                "longitude": 7.83554164079782
                                            }
                                        },
                                        "_links": {
                                            "creator": {
                                                "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/users/42101fba-847a-4f4e-85a8-a4bed89065e4"
                                            },
                                            "changesets": {
                                                "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/changesets"
                                            },
                                            "namedVersions": {
                                                "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/namedversions"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "This response indicates that request lacks valid authentication credentials. Access token might not been provided, issued by the wrong issuer, does not have required scopes or request headers were malformed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "Unauthorized",
                                        "message": "Access denied due to invalid access_token. Make sure to provide a valid token for this API endpoint."
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Specified iModel was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "iModelNotFound",
                                        "message": "Requested iModel is not available."
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "This response indicates that the user has sent too many requests in a given amount of time.",
                        "headers": {
                            "retry-after": {
                                "description": "The number of requests exceeds the rate-limit for the client subscription.",
                                "required": true,
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "TooManyRequests",
                                        "message": "More requests were received than the subscription rate-limit allows."
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{id}/namedversions/{namedVersionId}/checkpoint": {
            "get": {
                "tags": [
                    "Named Versions"
                ],
                "summary": "Get Named Version Checkpoint",
                "description": "---\r\n\r\nCheckpoint is a pre-processed iModel baseline file that has changes up to a certain Changeset already applied and is stored on the server. This can be used to reduce number of Changesets needed to apply to get to a certain version of the iModel.\r\n\r\nA Checkpoint is generated when a Named Version is created for that changeset.\r\n\r\nCheckpoint can be stored in two different ways:\r\n1. `download` property will have a Azure Blob storage link to a full `.bim` file that has changes applied up to the Changeset specified by `changesetIndex` and `changesetId` properties.\r\n2. `containerAccessInfo` will have an access key to Azure Blob container that stores the Checkpoint in 4 MB blocks. **Important: This property should only be used by iTwin.js libraries.**\r\n\r\nA successfully generated Checkpoint will have one or both of these properties.\r\n\r\n### Authentication\r\n\r\nRequires `Authorization` header with valid Bearer token for scope `imodels:read`.\r\n\r\nFor more documentation on authorization and how to get access token visit [OAUTH2 Authorization](https://developer.bentley.com/apis/overview/authorization/) page.\r\n\r\n### Authorization\r\n\r\nUser must have `imodels_read` permission assigned at the iModel level and at least `imodels_webview` permission assigned at the Project level. If permissions at the iModel level are not configured, then user must have `imodels_read` permission assigned at the Project level.\r\n\r\nAlternatively the user should be an Organization Administrator for the Organization that owns a given Project the iModel belongs to.\r\n\r\nAn Organization Administrator must have at least one of the following roles assigned in User Management: Account Administrator, Co-Administrator, or CONNECT Services Administrator. For more information about User Management please visit our Bentley Communities [Licensing, Cloud, and Web Services](https://communities.bentley.com/communities/other_communities/licensing_cloud_and_web_services/w/wiki/50711/user-management-2-0) wiki page.\r\n\r\n### Rate limits\r\n\r\nAll iTwin Platform API operations have a rate limit. For more documentation on that visit [Rate limits and quotas](https://developer.bentley.com/apis/overview/rate-limits/) page.\r\n\r\n---\r\n",
                "operationId": "get-named-version-checkpoint",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "iModel id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "namedVersionId",
                        "in": "path",
                        "description": "Named Version id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "OAuth access token with scope `imodels:read`",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "Setting to `application/vnd.bentley.itwin-platform.v1+json` is recommended.",
                        "schema": {
                            "enum": [
                                "application/vnd.bentley.itwin-platform.v1+json"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CheckpointResponse"
                                },
                                "example": {
                                    "checkpoint": {
                                        "changesetIndex": 1,
                                        "changesetId": "a1ecbdc8c4f6173004f9f881914a57c5511a362b",
                                        "state": "successful",
                                        "containerAccessInfo": {
                                            "account": "imodelhubsa01",
                                            "sas": "?sv=2019-07-07&sr=b&sig=ByGsPs4cwKyUfnV6%2BjDZFDL3J7QiE0vl917MCX%2FC35Y%3D&st=2021-07-30T10%3A53%3A09.5224547Z&se=2021-07-30T11%3A13%3A09.5224552Z&sp=r",
                                            "container": "imodelblocks-5e19bee0-3aea-4355-a9f0-c6df9989ee7d",
                                            "dbName": "a1ecbdc8c4f6173004f9f881914a57c5511a362b.bim"
                                        },
                                        "_links": {
                                            "download": {
                                                "href": "https://imodelhub.blob.core.windows.net/imodelhub-5e19bee0-3aea-4355-a9f0-c6df9989ee7d/5e19bee0-3aea-4355-a9f0-c6df9989ee7d.bim?sv=2019-07-07&sr=b&sig=ByGsPs4cwKyUfnV6%2BjDZFDL3J7QiE0vl917MCX%2FC35Y%3D&st=2021-07-30T10%3A53%3A09.5224547Z&se=2021-07-30T11%3A13%3A09.5224552Z&sp=r"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "This response indicates that request lacks valid authentication credentials. Access token might not been provided, issued by the wrong issuer, does not have required scopes or request headers were malformed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "Unauthorized",
                                        "message": "Access denied due to invalid access_token. Make sure to provide a valid token for this API endpoint."
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Specified iModel, Named Version or Checkpoint was not found.",
                        "content": {
                            "application/json;iModelNotFound": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "iModelNotFound",
                                        "message": "Requested iModel is not available."
                                    }
                                }
                            },
                            "application/json;NamedVersionNotFound": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "NamedVersionNotFound",
                                        "message": "Requested Named Version is not available."
                                    }
                                }
                            },
                            "application/json;CheckpointNotFound": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "CheckpointNotFound",
                                        "message": "Requested Checkpoint is not available."
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "This response indicates that the user has sent too many requests in a given amount of time.",
                        "headers": {
                            "retry-after": {
                                "description": "The number of requests exceeds the rate-limit for the client subscription.",
                                "required": true,
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "TooManyRequests",
                                        "message": "More requests were received than the subscription rate-limit allows."
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{id}/locks": {
            "patch": {
                "tags": [
                    "Locks"
                ],
                "summary": "Update iModel Locks",
                "description": "---\r\n\r\nAcquires requested locks on specified objects.\r\nLock - the right to modify a specific type of data within the iModel. For more information on Locks [see working with Locks via iTwin.js client libraries](https://www.itwinjs.org/learning/backend/concurrencycontrol/#pessimistic-concurrency-control).\r\n\r\n**Note:** Lock types have been removed for this API and should be ignored.\r\n\r\n**Object ids Limit:** Currently there can be at most 1000 object ids in a single request.\r\n\r\n### Authentication\r\n\r\nRequires `Authorization` header with valid Bearer token for scope `imodels:modify`.\r\n\r\nFor more documentation on authorization and how to get access token visit [OAUTH2 Authorization](https://developer.bentley.com/apis/overview/authorization/) page.\r\n\r\n### Authorization\r\n\r\nTo release any Locks (set `LockLevel` to `none`) user must have `imodels_manage` permission assigned at the iModel level. If permissions at the iModel level are not configured, then user must have `imodels_manage` permission assigned at the Project level. To acquire or realese Locks that the user owns `imodels_write` permission is enough.\r\n\r\nAlternatively the user should be an Organization Administrator for the Organization that owns a given Project the iModel belongs to.\r\n\r\nAn Organization Administrator must have at least one of the following roles assigned in User Management: Account Administrator, Co-Administrator, or CONNECT Services Administrator. For more information about User Management please visit our Bentley Communities [Licensing, Cloud, and Web Services](https://communities.bentley.com/communities/other_communities/licensing_cloud_and_web_services/w/wiki/50711/user-management-2-0) wiki page.\r\n\r\n### Rate limits\r\n\r\nAll iTwin Platform API operations have a rate limit. For more documentation on that visit [Rate limits and quotas](https://developer.bentley.com/apis/overview/rate-limits/) page.\r\n\r\n---\r\n",
                "operationId": "update-imodel-locks",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "iModelId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "OAuth access token with scope `imodels:modify`",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "Setting to `application/vnd.bentley.itwin-platform.v1+json` is recommended.",
                        "schema": {
                            "enum": [
                                "application/vnd.bentley.itwin-platform.v1+json"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Indicates request body content type. Supported media type is `application/json`.",
                        "schema": {
                            "enum": [
                                "application/json"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateLocks"
                            },
                            "example": {
                                "briefcaseId": 2,
                                "changesetId": "1f2e04b666edce395e37a795e2231e995cbf8349",
                                "lockedObjects": [
                                    {
                                        "lockLevel": "shared",
                                        "objectIds": [
                                            "0x1",
                                            "0x2",
                                            "0xab"
                                        ]
                                    },
                                    {
                                        "lockLevel": "exclusive",
                                        "objectIds": [
                                            "0x3",
                                            "0x4",
                                            "0xac"
                                        ]
                                    },
                                    {
                                        "lockLevel": "none",
                                        "objectIds": [
                                            "0x5",
                                            "0x6",
                                            "0xad"
                                        ]
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LockResponse"
                                },
                                "example": {
                                    "lock": {
                                        "briefcaseId": 2,
                                        "lockedObjects": [
                                            {
                                                "lockLevel": "shared",
                                                "objectIds": [
                                                    "0x1",
                                                    "0x2",
                                                    "0xab"
                                                ]
                                            },
                                            {
                                                "lockLevel": "exclusive",
                                                "objectIds": [
                                                    "0x3",
                                                    "0x4",
                                                    "0xac"
                                                ]
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "This response indicates that request lacks valid authentication credentials. Access token might not been provided, issued by the wrong issuer, does not have required scopes or request headers were malformed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "Unauthorized",
                                        "message": "Access denied due to invalid access_token. Make sure to provide a valid token for this API endpoint."
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "User is not authorized to update Locks.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "InsufficientPermissions",
                                        "message": "The user has insufficient permissions for the requested operation."
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Specified iModel, Briefcase, Lock or Changeset was not found.",
                        "content": {
                            "application/json;iModelNotFound": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "iModelNotFound",
                                        "message": "Requested iModel is not available."
                                    }
                                }
                            },
                            "application/json;BriefcaseNotFound": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "BriefcaseNotFound",
                                        "message": "Requested Briefcase is not available."
                                    }
                                }
                            },
                            "application/json;LockNotFound": {
                                "schema": {
                                    "$ref": "#/components/schemas/LocksErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "LockNotFound",
                                        "message": "Requested Lock(s) is not available.",
                                        "objectIds": [
                                            "0x1",
                                            "0x2",
                                            "0x3"
                                        ]
                                    }
                                }
                            },
                            "application/json;ChangesetNotFound": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "ChangesetNotFound",
                                        "message": "Requested Changeset is not available."
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Lock are already owned by another briefcase and cannot be acquired or locks have been updated in a newer changeset.",
                        "content": {
                            "application/json;ConflictWithAnotherUser": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictingLocksErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "ConflictWithAnotherUser",
                                        "message": "Lock(s) is owned by another briefcase.",
                                        "conflictingLocks": [
                                            {
                                                "lockLevel": "shared",
                                                "objectId": "0x1",
                                                "briefcaseIds": [
                                                    2,
                                                    5,
                                                    6
                                                ]
                                            },
                                            {
                                                "lockLevel": "shared",
                                                "objectId": "0x2",
                                                "briefcaseIds": [
                                                    5,
                                                    6
                                                ]
                                            },
                                            {
                                                "lockLevel": "exclusive",
                                                "objectId": "0x3",
                                                "briefcaseIds": [
                                                    6
                                                ]
                                            }
                                        ]
                                    }
                                }
                            },
                            "application/json;NewerChangesExist": {
                                "schema": {
                                    "$ref": "#/components/schemas/LocksErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "NewerChangesExist",
                                        "message": "One or more objects have been locked in a newer Changeset.",
                                        "objectIds": [
                                            "0x1",
                                            "0x2",
                                            "0x3"
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "413": {
                        "description": "Indicates that the request payload contains too many object ids.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "RequestTooLarge",
                                        "message": "Provided 'objectIds' count exceeds the limit of 1000."
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The 422 (Unprocessable Entity) status code indicates that the request cannot be processed by the server due to a client error (e.g. malformed request syntax)",
                        "content": {
                            "application/json;InvalidiModelsRequest": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "InvalidiModelsRequest",
                                        "message": "Cannot update Locks.",
                                        "details": [
                                            {
                                                "code": "InvalidValue",
                                                "message": "Provided 'briefcaseId' value is not valid. Expected a value of type 'integer'.",
                                                "target": "BriefcaseId"
                                            },
                                            {
                                                "code": "MissingRequiredProperty",
                                                "message": "Required property is missing.",
                                                "target": "BriefcaseId"
                                            },
                                            {
                                                "code": "InvalidRequestBody",
                                                "message": "Failed to parse request body. Make sure it is a valid JSON."
                                            }
                                        ]
                                    }
                                }
                            },
                            "application/json;MissingRequestBody": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "MissingRequestBody",
                                        "message": "Request body was not provided."
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "This response indicates that the user has sent too many requests in a given amount of time.",
                        "headers": {
                            "retry-after": {
                                "description": "The number of requests exceeds the rate-limit for the client subscription.",
                                "required": true,
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "TooManyRequests",
                                        "message": "More requests were received than the subscription rate-limit allows."
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Locks"
                ],
                "summary": "Get iModel Locks",
                "description": "---\r\n\r\nQueries locks of the iModel.\r\nLock - the right to modify a specific type of data within the iModel. For more information on Locks [see working with Locks via iTwin.js client libraries](https://www.itwinjs.org/learning/backend/concurrencycontrol/#pessimistic-concurrency-control).\r\n\r\n**Note:** Lock types have been removed for this API and should be ignored.\r\n\r\n### Paging\r\n\r\nPage size refers to total size of returned `objectIds` throughout all returned instances. If several Lock instances are returned that does not necessarily mean that instance is complete and more `objectIds` might be returned for that specific instance in a different page.\r\n\r\n### Authentication\r\n\r\nRequires `Authorization` header with valid Bearer token for scope `imodels:read`.\r\n\r\nFor more documentation on authorization and how to get access token visit [OAUTH2 Authorization](https://developer.bentley.com/apis/overview/authorization/) page.\r\n\r\n### Authorization\r\n\r\nUser must have `imodels_webview` permission assigned at the iModel level and at least `imodels_webview` permission assigned at the Project level. If permissions at the iModel level are not configured, then user must have `imodels_webview` permission assigned at the Project level.\r\n\r\nAlternatively the user should be an Organization Administrator for the Organization that owns a given Project the iModel belongs to.\r\n\r\nAn Organization Administrator must have at least one of the following roles assigned in User Management: Account Administrator, Co-Administrator, or CONNECT Services Administrator. For more information about User Management please visit our Bentley Communities [Licensing, Cloud, and Web Services](https://communities.bentley.com/communities/other_communities/licensing_cloud_and_web_services/w/wiki/50711/user-management-2-0) wiki page.\r\n\r\n### Rate limits\r\n\r\nAll iTwin Platform API operations have a rate limit. For more documentation on that visit [Rate limits and quotas](https://developer.bentley.com/apis/overview/rate-limits/) page.\r\n\r\n---\r\n",
                "operationId": "get-imodel-locks",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "iModel id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "The $skip query option requests the number of items in the queried collection that are to be skipped and not included in the result. E.g. to return items from the collection starting at the third place provide the following query: $skip=2.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "The $top query option requests the number of items in the queried collection to be included in the result. E.g. to return only first collection item provide the following query: $top=1. When $top parameter is not provided default is set to 100. $top value cannot exceed 1000.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "briefcaseId",
                        "in": "query",
                        "description": "Allows filtering locks by Briefcase Id and query only locks of a single briefcase.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "OAuth access token with scope `imodels:read`",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "Setting to `application/vnd.bentley.itwin-platform.v1+json` is recommended.",
                        "schema": {
                            "enum": [
                                "application/vnd.bentley.itwin-platform.v1+json"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LocksResponse"
                                },
                                "example": {
                                    "locks": [
                                        {
                                            "briefcaseId": 2,
                                            "lockedObjects": [
                                                {
                                                    "lockLevel": "shared",
                                                    "objectIds": [
                                                        "0x1",
                                                        "0x2",
                                                        "0xab"
                                                    ]
                                                },
                                                {
                                                    "lockLevel": "exclusive",
                                                    "objectIds": [
                                                        "0x3",
                                                        "0x4",
                                                        "0xac"
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "briefcaseId": 3,
                                            "lockedObjects": [
                                                {
                                                    "lockLevel": "shared",
                                                    "objectIds": [
                                                        "0x12",
                                                        "0x21",
                                                        "0xff"
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "_links": {
                                        "self": {
                                            "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/locks?$skip=0&$top=100"
                                        },
                                        "prev": {
                                            "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/locks?$skip=0&$top=100"
                                        },
                                        "next": {
                                            "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/locks?$skip=100&$top=100"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "This response indicates that request lacks valid authentication credentials. Access token might not been provided, issued by the wrong issuer, does not have required scopes or request headers were malformed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "Unauthorized",
                                        "message": "Access denied due to invalid access_token. Make sure to provide a valid token for this API endpoint."
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Specified iModel was not found.",
                        "content": {
                            "application/json;": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "iModelNotFound",
                                        "message": "Requested iModel is not available."
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The 422 (Unprocessable Entity) status code indicates that the request cannot be processed by the server due to a client error (e.g. malformed request syntax)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "InvalidiModelsRequest",
                                        "message": "Cannot get Locks.",
                                        "details": [
                                            {
                                                "code": "InvalidValue",
                                                "message": "'-1' is not a valid '$skip' value. '$skip' must be a non-negative integer.",
                                                "target": "$skip"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "This response indicates that the user has sent too many requests in a given amount of time.",
                        "headers": {
                            "retry-after": {
                                "description": "The number of requests exceeds the rate-limit for the client subscription.",
                                "required": true,
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "TooManyRequests",
                                        "message": "More requests were received than the subscription rate-limit allows."
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{id}/briefcases": {
            "post": {
                "tags": [
                    "Briefcases"
                ],
                "summary": "Acquire iModel Briefcase",
                "description": "---\r\n\r\nAcquires a new [Briefcase](https://www.itwinjs.org/learning/glossary/#briefcase).\r\n\r\nBriefcases are the local copies of iModel that users can acquire to work with the iModel. Users can make changes to their copy of iModel and then push them as a single Changeset file into iModelHub. For more information on Briefcases see [working with Briefcases](https://www.itwinjs.org/learning/imodelhub/briefcases/).\r\n\r\n### Authentication\r\n\r\nRequires `Authorization` header with valid Bearer token for scope `imodels:modify`.\r\n\r\nFor more documentation on authorization and how to get access token visit [OAUTH2 Authorization](https://developer.bentley.com/apis/overview/authorization/) page.\r\n\r\n### Authorization\r\n\r\nUser must have `imodels_read` permission assigned at the iModel level and at least `imodels_webview` permission assigned at the Project level. If permissions at the iModel level are not configured, then user must have `imodels_read` permission assigned at the Project level.\r\n\r\nAlternatively the user should be an Organization Administrator for the Organization that owns a given Project the iModel belongs to.\r\n\r\nAn Organization Administrator must have at least one of the following roles assigned in User Management: Account Administrator, Co-Administrator, or CONNECT Services Administrator. For more information about User Management please visit our Bentley Communities [Licensing, Cloud, and Web Services](https://communities.bentley.com/communities/other_communities/licensing_cloud_and_web_services/w/wiki/50711/user-management-2-0) wiki page.\r\n\r\n### Rate limits\r\n\r\nAll iTwin Platform API operations have a rate limit. For more documentation on that visit [Rate limits and quotas](https://developer.bentley.com/apis/overview/rate-limits/) page.\r\n\r\n---\r\n",
                "operationId": "acquire-imodel-briefcase",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "iModel id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "OAuth access token with scope `imodels:modify`",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "Setting to `application/vnd.bentley.itwin-platform.v1+json` is recommended.",
                        "schema": {
                            "enum": [
                                "application/vnd.bentley.itwin-platform.v1+json"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Indicates request body content type. Supported media type is `application/json`.",
                        "schema": {
                            "enum": [
                                "application/json"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BriefcaseAcquire"
                            },
                            "example": {
                                "deviceName": "Device name"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BriefcaseResponse"
                                },
                                "example": {
                                    "briefcase": {
                                        "id": "2",
                                        "briefcaseId": 2,
                                        "displayName": "#2 Device Name",
                                        "ownerId": "42101fba-847a-4f4e-85a8-a4bed89065e4",
                                        "acquiredDateTime": "2020-10-20T10:51:33.17+00:00",
                                        "fileSize": 2048,
                                        "deviceName": "Device Name",
                                        "_links": {
                                            "owner": {
                                                "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/users/42101fba-847a-4f4e-85a8-a4bed89065e4"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "This response indicates that request lacks valid authentication credentials. Access token might not been provided, issued by the wrong issuer, does not have required scopes or request headers were malformed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "Unauthorized",
                                        "message": "Access denied due to invalid access_token. Make sure to provide a valid token for this API endpoint."
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "User is not authorized to acquire a Briefcase.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "InsufficientPermissions",
                                        "message": "The user has insufficient permissions for the requested operation."
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Specified iModel was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "iModelNotFound",
                                        "message": "Requested iModel is not available."
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The 422 (Unprocessable Entity) status code indicates that the request cannot be processed by the server due to a client error (e.g. malformed request syntax)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "InvalidiModelsRequest",
                                        "message": "Cannot acquire Briefcase.",
                                        "details": [
                                            {
                                                "code": "InvalidValue",
                                                "message": "Provided 'deviceName' is not valid. The value exceeds allowed 255 characters.",
                                                "target": "deviceName"
                                            },
                                            {
                                                "code": "InvalidHeaderValue",
                                                "message": "'application/xml' is not supported 'content-type'. Supported media type is 'application/json'.",
                                                "target": "content-type"
                                            },
                                            {
                                                "code": "ResourceQuotaExceeded",
                                                "message": "Maximum number of Briefcases per user limit reached.",
                                                "innerError": {
                                                    "code": "MaximumNumberOfBriefcasesPerUser"
                                                }
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "This response indicates that the user has sent too many requests in a given amount of time.",
                        "headers": {
                            "retry-after": {
                                "description": "Indicates how long the user agent should wait before making a follow-up request.",
                                "required": true,
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json;TooManyRequests": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "code": "TooManyRequests",
                                    "message": "More requests were received than the subscription rate-limit allows."
                                }
                            },
                            "application/json;RateLimitExceeded": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "RateLimitExceeded",
                                        "message": "Maximum number of briefcases per user per minute reached."
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Briefcases"
                ],
                "summary": "Get iModel Briefcases",
                "description": "---\r\n\r\nRetrieves a list of [Briefcases](https://www.itwinjs.org/learning/glossary/#briefcase) for the iModel specified by the iModel id.\r\n\r\nBriefcases are the local copies of iModel that users can acquire to work with the iModel. Users can make changes to their copy of iModel and then push them as a single Changeset file into iModelHub. For more information on Briefcases see [working with Briefcases](https://www.itwinjs.org/learning/imodelhub/briefcases/).\r\n\r\n### Notes\r\n\r\nThe `Prefer` header can be used to specify how much result metadata is desired by the client. The `Prefer` request header field is used to indicate that particular server behaviors are preferred by the client but are not required for successful completion of the request.\r\n\r\nThis operation supports `\"return=representation\"` and `\"return=minimal\"` preferences.\r\n\r\nThe `\"return=representation\"` preference indicates that the client prefers that the server include an entity representing the current state of the resource in the response to a successful request.\r\nThe `\"return=minimal\"` preference indicates that the client wishes the server to return only a minimal response to a successful request. This is the default preference if `Prefer` header is not specified.\r\n\r\n### Authentication\r\n\r\nRequires `Authorization` header with valid Bearer token for scope `imodels:read`.\r\n\r\nFor more documentation on authorization and how to get access token visit [OAUTH2 Authorization](https://developer.bentley.com/apis/overview/authorization/) page.\r\n\r\n### Authorization\r\n\r\nUser must have `imodels_webview` permission assigned at the iModel level and at least `imodels_webview` permission assigned at the Project level. If permissions at the iModel level are not configured, then user must have `imodels_webview` permission assigned at the Project level.\r\n\r\nAlternatively the user should be an Organization Administrator for the Organization that owns a given Project the iModel belongs to.\r\n\r\nAn Organization Administrator must have at least one of the following roles assigned in User Management: Account Administrator, Co-Administrator, or CONNECT Services Administrator. For more information about User Management please visit our Bentley Communities [Licensing, Cloud, and Web Services](https://communities.bentley.com/communities/other_communities/licensing_cloud_and_web_services/w/wiki/50711/user-management-2-0) wiki page.\r\n\r\n### Rate limits\r\n\r\nAll iTwin Platform API operations have a rate limit. For more documentation on that visit [Rate limits and quotas](https://developer.bentley.com/apis/overview/rate-limits/) page.\r\n\r\n---\r\n",
                "operationId": "get-imodel-briefcases",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "iModel id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "The $top query option requests the number of items in the queried collection to be included in the result. E.g. to return only first collection item provide the following query: $top=1. When $top parameter is not provided default is set to 100. $top value cannot exceed 1000.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "The $skip query option requests the number of items in the queried collection that are to be skipped and not included in the result. E.g. to return items from the collection starting at the third place provide the following query: $skip=2.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "ownerId",
                        "in": "query",
                        "description": "The ownerId query option allows users to filter Briefcases by their ownerId property. Currently the only supported value for this parameter is 'me' which references the current user. Current user is a user that the access token used for request belongs to. E.g. to return Briefcases owned by the current user provide the following query: ownerId=me.",
                        "schema": {
                            "enum": [
                                "me"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "OAuth access token with scope `imodels:read`",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "Setting to `application/vnd.bentley.itwin-platform.v1+json` is recommended.",
                        "schema": {
                            "enum": [
                                "application/vnd.bentley.itwin-platform.v1+json"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "Prefer",
                        "in": "header",
                        "description": "Indicates a level of details in the response. This operation supports 'return=representation' and 'return=minimal' preferences.",
                        "schema": {
                            "enum": [
                                "return=minimal",
                                "return=representation"
                            ],
                            "type": "string",
                            "default": "return=minimal"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json;minimal": {
                                "schema": {
                                    "$ref": "#/components/schemas/BriefcasesMinimal"
                                },
                                "example": {
                                    "briefcases": [
                                        {
                                            "id": "2",
                                            "displayName": "#2 Device Name"
                                        },
                                        {
                                            "id": "3",
                                            "displayName": "#3 Device Name"
                                        }
                                    ],
                                    "_links": {
                                        "self": {
                                            "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/briefcases?$skip=0&$top=100"
                                        },
                                        "prev": {
                                            "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/briefcases?$skip=0&$top=100"
                                        },
                                        "next": {
                                            "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/briefcases?$skip=0&$top=100"
                                        }
                                    }
                                }
                            },
                            "application/json;representation": {
                                "schema": {
                                    "$ref": "#/components/schemas/BriefcasesRepresentation"
                                },
                                "example": {
                                    "briefcases": [
                                        {
                                            "id": "2",
                                            "briefcaseId": 2,
                                            "displayName": "#2 Device Name",
                                            "ownerId": "42101fba-847a-4f4e-85a8-a4bed89065e4",
                                            "acquiredDateTime": "2020-10-20T10:51:33.17+00:00",
                                            "fileSize": 2048,
                                            "deviceName": "Device Name",
                                            "_links": {
                                                "owner": {
                                                    "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/users/42101fba-847a-4f4e-85a8-a4bed89065e4"
                                                }
                                            }
                                        },
                                        {
                                            "id": "3",
                                            "briefcaseId": 3,
                                            "displayName": "#3 Device Name",
                                            "ownerId": "42101fba-847a-4f4e-85a8-a4bed89065e4",
                                            "acquiredDateTime": "2020-10-20T10:51:33.17+00:00",
                                            "fileSize": 2048,
                                            "deviceName": "Device Name",
                                            "_links": {
                                                "owner": {
                                                    "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/users/42101fba-847a-4f4e-85a8-a4bed89065e4"
                                                }
                                            }
                                        }
                                    ],
                                    "_links": {
                                        "self": {
                                            "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/briefcases?$skip=0&$top=100"
                                        },
                                        "prev": {
                                            "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/briefcases?$skip=0&$top=100"
                                        },
                                        "next": {
                                            "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/briefcases?skip=100&$top=100"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "This response indicates that request lacks valid authentication credentials. Access token might not been provided, issued by the wrong issuer, does not have required scopes or request headers were malformed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "Unauthorized",
                                        "message": "Access denied due to invalid access_token. Make sure to provide a valid token for this API endpoint."
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Specified iModel was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "iModelNotFound",
                                        "message": "Requested iModel is not available."
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The 422 (Unprocessable Entity) status code indicates that the request cannot be processed by the server due to a client error (e.g. malformed request syntax)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "InvalidiModelsRequest",
                                        "message": "Cannot get Briefcases.",
                                        "details": [
                                            {
                                                "code": "InvalidValue",
                                                "message": "'-1' is not a valid '$skip' value. '$skip' must be a non-negative integer.",
                                                "target": "$skip"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "This response indicates that the user has sent too many requests in a given amount of time.",
                        "headers": {
                            "retry-after": {
                                "description": "The number of requests exceeds the rate-limit for the client subscription.",
                                "required": true,
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "TooManyRequests",
                                        "message": "More requests were received than the subscription rate-limit allows."
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{id}/users/{userId}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get iModel User",
                "description": "---\r\n\r\nRetrieves the details about the user.\r\n\r\n### Authentication\r\n\r\nRequires `Authorization` header with valid Bearer token for scope `imodels:read`.\r\n\r\nFor more documentation on authorization and how to get access token visit [OAUTH2 Authorization](https://developer.bentley.com/apis/overview/authorization/) page.\r\n\r\n### Authorization\r\n\r\nUser must have `imodels_webview` permission assigned at the iModel level and at least `imodels_webview` permission assigned at the Project level. If permissions at the iModel level are not configured, then user must have `imodels_webview` permission assigned at the Project level.\r\n\r\nAlternatively the user should be an Organization Administrator for the Organization that owns a given Project the iModel belongs to.\r\n\r\nAn Organization Administrator must have at least one of the following roles assigned in User Management: Account Administrator, Co-Administrator, or CONNECT Services Administrator. For more information about User Management please visit our Bentley Communities [Licensing, Cloud, and Web Services](https://communities.bentley.com/communities/other_communities/licensing_cloud_and_web_services/w/wiki/50711/user-management-2-0) wiki page.\r\n\r\n### Rate limits\r\n\r\nAll iTwin Platform API operations have a rate limit. For more documentation on that visit [Rate limits and quotas](https://developer.bentley.com/apis/overview/rate-limits/) page.\r\n\r\n---\r\n",
                "operationId": "get-imodel-user-details",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "iModel id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User id ",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "OAuth access token with scope `imodels:read`",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "Setting to `application/vnd.bentley.itwin-platform.v1+json` is recommended.",
                        "schema": {
                            "enum": [
                                "application/vnd.bentley.itwin-platform.v1+json"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResponse"
                                },
                                "example": {
                                    "user": {
                                        "id": "ea4dfb9f-7f66-4c6f-82c5-0efad1636a1f",
                                        "displayName": "hanson.deck@cohesivecompanies.com",
                                        "givenName": "Hanson",
                                        "surname": "Deck",
                                        "email": "hanson.deck@cohesivecompanies.com",
                                        "_links": {
                                            "self": {
                                                "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/users/ea4dfb9f-7f66-4c6f-82c5-0efad1636a1f"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "This response indicates that request lacks valid authentication credentials. Access token might not been provided, issued by the wrong issuer, does not have required scopes or request headers were malformed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "Unauthorized",
                                        "message": "Access denied due to invalid access_token. Make sure to provide a valid token for this API endpoint."
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Specified iModel or user was not found.",
                        "content": {
                            "application/json;iModelNotFound": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "iModelNotFound",
                                        "message": "Requested iModel is not available."
                                    }
                                }
                            },
                            "application/json;UserNotFound": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "UserNotFound",
                                        "message": "Requested user is not available."
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "This response indicates that the user has sent too many requests in a given amount of time.",
                        "headers": {
                            "retry-after": {
                                "description": "The number of requests exceeds the rate-limit for the client subscription.",
                                "required": true,
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "TooManyRequests",
                                        "message": "More requests were received than the subscription rate-limit allows."
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{id}/namedversions": {
            "get": {
                "tags": [
                    "Named Versions"
                ],
                "summary": "Get iModel Named Versions",
                "description": "---\r\n\r\nRetrieves a list of Named Versions for the iModel specified by the iModel id.\r\n\r\nEvery [Changeset](https://www.itwinjs.org/learning/glossary/#changeset) on the timeline creates a new version of the iModel. However, some points on the timeline can represent important milestones or significant events to be saved. iModelHub provides a way to mark a point on the timeline with a name. These time points are referred to as Named Versions.\r\n\r\n### Notes\r\n\r\nThe `Prefer` header can be used to specify how much result metadata is desired by the client. The `Prefer` request header field is used to indicate that particular server behaviors are preferred by the client but are not required for successful completion of the request.\r\n\r\nThis operation supports `\"return=representation\"` and `\"return=minimal\"` preferences.\r\n\r\nThe `\"return=representation\"` preference indicates that the client prefers that the server include an entity representing the current state of the resource in the response to a successful request.\r\nThe `\"return=minimal\"` preference indicates that the client wishes the server to return only a minimal response to a successful request. This is the default preference if `Prefer` header is not specified.\r\n\r\n### Authentication\r\n\r\nRequires `Authorization` header with valid Bearer token for scope `imodels:read`.\r\n\r\nFor more documentation on authorization and how to get access token visit [OAUTH2 Authorization](https://developer.bentley.com/apis/overview/authorization/) page.\r\n\r\n### Authorization\r\n\r\nUser must have `imodels_webview` permission assigned at the iModel level and at least `imodels_webview` permission assigned at the Project level. If permissions at the iModel level are not configured, then user must have `imodels_webview` permission assigned at the Project level.\r\n\r\nAlternatively the user should be an Organization Administrator for the Organization that owns a given Project the iModel belongs to.\r\n\r\nAn Organization Administrator must have at least one of the following roles assigned in User Management: Account Administrator, Co-Administrator, or CONNECT Services Administrator. For more information about User Management please visit our Bentley Communities [Licensing, Cloud, and Web Services](https://communities.bentley.com/communities/other_communities/licensing_cloud_and_web_services/w/wiki/50711/user-management-2-0) wiki page.\r\n\r\n### Rate limits\r\n\r\nAll iTwin Platform API operations have a rate limit. For more documentation on that visit [Rate limits and quotas](https://developer.bentley.com/apis/overview/rate-limits/) page.\r\n\r\n---\r\n",
                "operationId": "get-imodel-named-versions",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "iModel id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "The $top query option requests the number of items in the queried collection to be included in the result. E.g. to return only first collection item provide the following query: $top=1. When $top parameter is not provided default is set to 100. $top value cannot exceed 1000.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "The $skip query option requests the number of items in the queried collection that are to be skipped and not included in the result. E.g. to return items from the collection starting at the third place provide the following query: $skip=2.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "$orderBy",
                        "in": "query",
                        "description": "The $orderBy query option allows clients to request ascending using 'asc' or descending using 'desc' order of the returned collection by one of the item properties. Currently the only supported property for Named Versions is 'changesetIndex'. When neither 'asc' or 'desc' keyword is specified the collection is sorted in ascending order. To sort the collection in descending order provide 'desc' keyword e.g.: $orderBy=changesetIndex desc",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "The name query option allows users to filter Named Versions by their name property. E.g. to return Named Versions that have a name equal to 'Milestone 1' provide the following query: name=Milestone%201. Valid values for this parameter follow the same requirements as for Named Version creation - strings should be not empty, consist not only of whitespace and not exceed 255 characters. This query option uses exact matching.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "OAuth access token with scope `imodels:read`",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "Setting to `application/vnd.bentley.itwin-platform.v1+json` is recommended.",
                        "schema": {
                            "enum": [
                                "application/vnd.bentley.itwin-platform.v1+json"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "Prefer",
                        "in": "header",
                        "description": "Indicates a level of details in the response. This operation supports 'return=representation' and 'return=minimal' preferences.",
                        "schema": {
                            "enum": [
                                "return=minimal",
                                "return=representation"
                            ],
                            "type": "string",
                            "default": "return=minimal"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json;minimal": {
                                "schema": {
                                    "$ref": "#/components/schemas/NamedVersionsMinimal"
                                },
                                "example": {
                                    "namedVersions": [
                                        {
                                            "id": "1083a893-0f60-4918-8fb0-c3feebf84d6a",
                                            "displayName": "Solar farm design",
                                            "changesetId": "9913e22a00eb1086c6be0ed3d09e692738fdfe9d",
                                            "changesetIndex": 11
                                        },
                                        {
                                            "id": "3020441b-e179-4334-a59a-4fb8deb93df1",
                                            "displayName": "Wind farm design",
                                            "changesetId": "1f2e04b666edce395e37a795e2231e995cbf8349",
                                            "changesetIndex": 14
                                        }
                                    ],
                                    "_links": {
                                        "self": {
                                            "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/namedversions?$skip=0&$top=100"
                                        },
                                        "prev": {
                                            "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/namedversions?$skip=0&$top=100"
                                        },
                                        "next": {
                                            "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/namedversions?$skip=100&$top=100"
                                        }
                                    }
                                }
                            },
                            "application/json;representation": {
                                "schema": {
                                    "$ref": "#/components/schemas/NamedVersionsRepresentation"
                                },
                                "example": {
                                    "namedVersions": [
                                        {
                                            "id": "1083a893-0f60-4918-8fb0-c3feebf84d6a",
                                            "displayName": "Solar farm design",
                                            "changesetId": "9913e22a00eb1086c6be0ed3d09e692738fdfe9d",
                                            "changesetIndex": 11,
                                            "description": "Finalized solar farm design in Sun City",
                                            "name": "Solar farm design",
                                            "createdDateTime": "2020-10-22T07:46:50.987+00:00",
                                            "state": "visible",
                                            "_links": {
                                                "creator": {
                                                    "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/users/64c58b5e-ba12-4e2a-8f0d-5f898009cfe2"
                                                },
                                                "changeset": {
                                                    "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/changesets/9913e22a00eb1086c6be0ed3d09e692738fdfe9d"
                                                }
                                            }
                                        },
                                        {
                                            "id": "3020441b-e179-4334-a59a-4fb8deb93df1",
                                            "displayName": "Wind farm design",
                                            "changesetId": "1f2e04b666edce395e37a795e2231e995cbf8349",
                                            "changesetIndex": 14,
                                            "description": "Finalized wind farm design in Sun City",
                                            "name": "Wind farm design",
                                            "createdDateTime": "2020-10-21T06:42:57.67+00:00",
                                            "state": "hidden",
                                            "_links": {
                                                "creator": {
                                                    "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/users/64c58b5e-ba12-4e2a-8f0d-5f898009cfe2"
                                                },
                                                "changeset": {
                                                    "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/changesets/1f2e04b666edce395e37a795e2231e995cbf8349"
                                                }
                                            }
                                        }
                                    ],
                                    "_links": {
                                        "self": {
                                            "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/namedversions?$skip=0&$top=100"
                                        },
                                        "prev": {
                                            "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/namedversions?$skip=0&$top=100"
                                        },
                                        "next": {
                                            "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/namedversions?$skip=100&$top=100"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "This response indicates that request lacks valid authentication credentials. Access token might not been provided, issued by the wrong issuer, does not have required scopes or request headers were malformed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "Unauthorized",
                                        "message": "Access denied due to invalid access_token. Make sure to provide a valid token for this API endpoint."
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested iModel is not available.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "iModelNotFound",
                                        "message": "Requested iModel is not available."
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The 422 (Unprocessable Entity) status code indicates that the request cannot be processed by the server due to a client error (e.g. malformed request syntax)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "InvalidiModelsRequest",
                                        "message": "Cannot get Named Versions.",
                                        "details": [
                                            {
                                                "code": "InvalidValue",
                                                "message": "'-1' is not a valid '$skip' value. '$skip' must be a non-negative integer.",
                                                "target": "$skip"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "This response indicates that the user has sent too many requests in a given amount of time.",
                        "headers": {
                            "retry-after": {
                                "description": "The number of requests exceeds the rate-limit for the client subscription.",
                                "required": true,
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "TooManyRequests",
                                        "message": "More requests were received than the subscription rate-limit allows."
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Named Versions"
                ],
                "summary": "Create iModel Named Version",
                "description": "---\r\n\r\nCreate a [Named Version](https://www.itwinjs.org/learning/glossary/#namedversion).\r\n\r\nEvery [Changeset](https://www.itwinjs.org/learning/glossary/#changeset) on the timeline creates a new version of the iModel. However, some points on the timeline can represent important milestones or significant events to be saved. iModelHub provides a way to mark a point on the timeline with a name. These time points are referred to as Named Versions.\r\n\r\n### Authentication\r\n\r\nRequires `Authorization` header with valid Bearer token for scope `imodels:modify`.\r\n\r\nFor more documentation on authorization and how to get access token visit [OAUTH2 Authorization](https://developer.bentley.com/apis/overview/authorization/) page.\r\n\r\n### Authorization\r\n\r\nUser must have `imodels_write` permission assigned at the iModel level and at least `imodels_webview` permission assigned at the Project level. If permissions at the iModel level are not configured, then user must have `imodels_write` permission assigned at the Project level.\r\n\r\nAlternatively the user should be an Organization Administrator for the Organization that owns a given Project the iModel belongs to.\r\n\r\nAn Organization Administrator must have at least one of the following roles assigned in User Management: Account Administrator, Co-Administrator, or CONNECT Services Administrator. For more information about User Management please visit our Bentley Communities [Licensing, Cloud, and Web Services](https://communities.bentley.com/communities/other_communities/licensing_cloud_and_web_services/w/wiki/50711/user-management-2-0) wiki page.\r\n\r\n### Rate limits\r\n\r\nAll iTwin Platform API operations have a rate limit. For more documentation on that visit [Rate limits and quotas](https://developer.bentley.com/apis/overview/rate-limits/) page.\r\n\r\n---\r\n",
                "operationId": "create-imodel-named-version",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "iModel id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "OAuth access token with scope `imodels:modify`",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "Setting to `application/vnd.bentley.itwin-platform.v1+json` is recommended.",
                        "schema": {
                            "enum": [
                                "application/vnd.bentley.itwin-platform.v1+json"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Indicates request body content type. Supported media type is `application/json`.",
                        "schema": {
                            "enum": [
                                "application/json"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NamedVersionCreate"
                            },
                            "example": {
                                "name": "Wind farm design",
                                "description": "Finalized wind farm design in Sun City",
                                "changesetId": "1f2e04b666edce395e37a795e2231e995cbf8349"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NamedVersionResponse"
                                },
                                "example": {
                                    "namedVersion": {
                                        "id": "3020441b-e179-4334-a59a-4fb8deb93df1",
                                        "displayName": "Wind farm design",
                                        "changesetId": "1f2e04b666edce395e37a795e2231e995cbf8349",
                                        "changesetIndex": 14,
                                        "name": "Wind farm design",
                                        "description": "Finalized wind farm design in Sun City",
                                        "createdDateTime": "2020-10-21T06:42:57.67+00:00",
                                        "state": "visible",
                                        "_links": {
                                            "creator": {
                                                "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/users/ea4dfb9f-7f66-4c6f-82c5-0efad1636a1f"
                                            },
                                            "changeset": {
                                                "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/changesets/1f2e04b666edce395e37a795e2231e995cbf8349"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "This response indicates that request lacks valid authentication credentials. Access token might not been provided, issued by the wrong issuer, does not have required scopes or request headers were malformed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "Unauthorized",
                                        "message": "Access denied due to invalid access_token. Make sure to provide a valid token for this API endpoint."
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "User is not authorized to create a Named Version.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "InsufficientPermissions",
                                        "message": "The user has insufficient permissions for the requested operation."
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Specified iModel was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "iModelNotFound",
                                        "message": "Requested iModel is not available."
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Named Version with the same name or Changeset already exists.",
                        "content": {
                            "application/json;NamedVersionExists": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "NamedVersionExists",
                                        "message": "Named Version with the same name already exists within the iModel."
                                    }
                                }
                            },
                            "application/json;NamedVersionOnChangesetExists": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "NamedVersionOnChangesetExists",
                                        "message": "Named Version for specified Changeset already exists."
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The 422 (Unprocessable Entity) status code indicates that the request cannot be processed by the server due to a client error (e.g. malformed request syntax)",
                        "content": {
                            "application/json;InvalidiModelsRequest": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "InvalidiModelsRequest",
                                        "message": "Cannot create Named Version.",
                                        "details": [
                                            {
                                                "code": "InvalidValue",
                                                "message": "Provided 'name' is not valid. The value exceeds allowed 255 characters.",
                                                "target": "name"
                                            },
                                            {
                                                "code": "InvalidHeaderValue",
                                                "message": "'application/xml' is not supported 'content-type'. Supported media type is 'application/json'.",
                                                "target": "content-type"
                                            },
                                            {
                                                "code": "MissingRequiredProperty",
                                                "message": "Required property is missing.",
                                                "target": "name"
                                            },
                                            {
                                                "code": "InvalidRequestBody",
                                                "message": "Failed to parse request body. Make sure it is a valid JSON."
                                            }
                                        ]
                                    }
                                }
                            },
                            "application/json;MissingRequestBody": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "MissingRequestBody",
                                        "message": "Request body was not provided."
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "This response indicates that the user has sent too many requests in a given amount of time.",
                        "headers": {
                            "retry-after": {
                                "description": "The number of requests exceeds the rate-limit for the client subscription.",
                                "required": true,
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "TooManyRequests",
                                        "message": "More requests were received than the subscription rate-limit allows."
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{id}/changesets/{changeset}/checkpoint": {
            "get": {
                "tags": [
                    "Changesets"
                ],
                "summary": "Get Changeset Checkpoint",
                "description": "---\r\n\r\nCheckpoint is a pre-processed iModel baseline file that has changes up to a certain Changeset already applied and is stored on the server. This can be used to reduce number of Changesets needed to apply to get to a certain version of the iModel.\r\n\r\nA Checkpoint is generated when a Named Version is created for that changeset.\r\n\r\nCheckpoint can be stored in two different ways:\r\n\r\n1. `download` property will have a Azure Blob storage link to a full `.bim` file that has changes applied up to the Changeset specified by `changesetIndex` and `changesetId` properties.\r\n2. `containerAccessInfo` will have an access key to Azure Blob container that stores the Checkpoint in 4 MB blocks. **Important: This property should only be used by iTwin.js libraries.**\r\n\r\nA successfully generated Checkpoint will have one or both of these properties.\r\n\r\n### Authentication\r\n\r\nRequires `Authorization` header with valid Bearer token for scope `imodels:read`.\r\n\r\nFor more documentation on authorization and how to get access token visit [OAUTH2 Authorization](https://developer.bentley.com/apis/overview/authorization/) page.\r\n\r\n### Authorization\r\n\r\nUser must have `imodels_read` permission assigned at the iModel level and at least `imodels_webview` permission assigned at the Project level. If permissions at the iModel level are not configured, then user must have `imodels_read` permission assigned at the Project level.\r\n\r\nAlternatively the user should be an Organization Administrator for the Organization that owns a given Project the iModel belongs to.\r\n\r\nAn Organization Administrator must have at least one of the following roles assigned in User Management: Account Administrator, Co-Administrator, or CONNECT Services Administrator. For more information about User Management please visit our Bentley Communities [Licensing, Cloud, and Web Services](https://communities.bentley.com/communities/other_communities/licensing_cloud_and_web_services/w/wiki/50711/user-management-2-0) wiki page.\r\n\r\n### Rate limits\r\n\r\nAll iTwin Platform API operations have a rate limit. For more documentation on that visit [Rate limits and quotas](https://developer.bentley.com/apis/overview/rate-limits/) page.\r\n\r\n---\r\n",
                "operationId": "get-changeset-checkpoint",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "iModel id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "changeset",
                        "in": "path",
                        "description": "Changeset id or index",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "OAuth access token with scope `imodels:read`",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "Setting to `application/vnd.bentley.itwin-platform.v1+json` is recommended.",
                        "schema": {
                            "enum": [
                                "application/vnd.bentley.itwin-platform.v1+json"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CheckpointResponse"
                                },
                                "example": {
                                    "checkpoint": {
                                        "changesetIndex": 1,
                                        "changesetId": "a1ecbdc8c4f6173004f9f881914a57c5511a362b",
                                        "state": "successful",
                                        "containerAccessInfo": {
                                            "account": "imodelhubsa01",
                                            "sas": "?sv=2019-07-07&sr=b&sig=ByGsPs4cwKyUfnV6%2BjDZFDL3J7QiE0vl917MCX%2FC35Y%3D&st=2021-07-30T10%3A53%3A09.5224547Z&se=2021-07-30T11%3A13%3A09.5224552Z&sp=r",
                                            "container": "imodelblocks-5e19bee0-3aea-4355-a9f0-c6df9989ee7d",
                                            "dbName": "a1ecbdc8c4f6173004f9f881914a57c5511a362b.bim"
                                        },
                                        "_links": {
                                            "download": {
                                                "href": "https://imodelhub.blob.core.windows.net/imodelhub-5e19bee0-3aea-4355-a9f0-c6df9989ee7d/5e19bee0-3aea-4355-a9f0-c6df9989ee7d.bim?sv=2019-07-07&sr=b&sig=ByGsPs4cwKyUfnV6%2BjDZFDL3J7QiE0vl917MCX%2FC35Y%3D&st=2021-07-30T10%3A53%3A09.5224547Z&se=2021-07-30T11%3A13%3A09.5224552Z&sp=r"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "This response indicates that request lacks valid authentication credentials. Access token might not been provided, issued by the wrong issuer, does not have required scopes or request headers were malformed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "Unauthorized",
                                        "message": "Access denied due to invalid access_token. Make sure to provide a valid token for this API endpoint."
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Specified iModel, Changeset or Checkpoint was not found.",
                        "content": {
                            "application/json;iModelNotFound": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "iModelNotFound",
                                        "message": "Requested iModel is not available."
                                    }
                                }
                            },
                            "application/json;ChangesetNotFound": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "ChangesetNotFound",
                                        "message": "Requested Changeset is not available."
                                    }
                                }
                            },
                            "application/json;CheckpointNotFound": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "CheckpointNotFound",
                                        "message": "Requested Checkpoint is not available."
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "This response indicates that the user has sent too many requests in a given amount of time.",
                        "headers": {
                            "retry-after": {
                                "description": "The number of requests exceeds the rate-limit for the client subscription.",
                                "required": true,
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "TooManyRequests",
                                        "message": "More requests were received than the subscription rate-limit allows."
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{id}/changesets/{changesetId}": {
            "patch": {
                "tags": [
                    "Changesets"
                ],
                "summary": "Update iModel Changeset",
                "description": "---\r\n\r\nConfirm that [Changeset](https://www.itwinjs.org/learning/glossary/#changeset) file has been uploaded to file storage and finalize Changeset push.\r\n\r\n### Authentication\r\n\r\nRequires `Authorization` header with valid Bearer token for scope `imodels:modify`.\r\n\r\nFor more documentation on authorization and how to get access token visit [OAUTH2 Authorization](https://developer.bentley.com/apis/overview/authorization/) page.\r\n\r\n### Authorization\r\n\r\nUser must have `imodels_write` permission assigned at the iModel level and at least `imodels_webview` permission assigned at the Project level. If permissions at the iModel level are not configured, then user must have `imodels_write` permission assigned at the Project level.\r\n\r\nAlternatively the user should be an Organization Administrator for the Organization that owns a given Project the iModel belongs to.\r\n\r\nAn Organization Administrator must have at least one of the following roles assigned in User Management: Account Administrator, Co-Administrator, or CONNECT Services Administrator. For more information about User Management please visit our Bentley Communities [Licensing, Cloud, and Web Services](https://communities.bentley.com/communities/other_communities/licensing_cloud_and_web_services/w/wiki/50711/user-management-2-0) wiki page.\r\n\r\n### Rate limits\r\n\r\nAll iTwin Platform API operations have a rate limit. For more documentation on that visit [Rate limits and quotas](https://developer.bentley.com/apis/overview/rate-limits/) page.\r\n\r\n---\r\n",
                "operationId": "update-imodel-changeset",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "iModel id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "changesetId",
                        "in": "path",
                        "description": "Changeset id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "OAuth access token with scope `imodels:modify`",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "Setting to `application/vnd.bentley.itwin-platform.v1+json` is recommended.",
                        "schema": {
                            "enum": [
                                "application/vnd.bentley.itwin-platform.v1+json"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Indicates request body content type. Supported media type is `application/json`.",
                        "schema": {
                            "enum": [
                                "application/json"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChangesetUpdate"
                            },
                            "example": {
                                "state": "fileUploaded",
                                "briefcaseId": 2
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ChangesetResponse"
                                },
                                "example": {
                                    "changeset": {
                                        "id": "1f2e04b666edce395e37a795e2231e995cbf8349",
                                        "displayName": "256",
                                        "description": "Changeset 15",
                                        "index": 256,
                                        "parentId": "f7618612c572d7db8e3e6095d622d0d8aff22874",
                                        "state": "fileUploaded",
                                        "containingChanges": 0,
                                        "fileSize": 109,
                                        "briefcaseId": 2,
                                        "creatorId": "ea4dfb9f-7f66-4c6f-82c5-0efad1636a1f",
                                        "pushDateTime": "2020-10-21T06:35:30.7+00:00",
                                        "application": null,
                                        "synchronizationInfo": null,
                                        "_links": {
                                            "creator": {
                                                "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/users/ea4dfb9f-7f66-4c6f-82c5-0efad1636a1f"
                                            },
                                            "namedVersion": null,
                                            "self": {
                                                "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/changesets/1f2e04b666edce395e37a795e2231e995cbf8349"
                                            },
                                            "download": null
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "This response indicates that request lacks valid authentication credentials. Access token might not been provided, issued by the wrong issuer, does not have required scopes or request headers were malformed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "Unauthorized",
                                        "message": "Access denied due to invalid access_token. Make sure to provide a valid token for this API endpoint."
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "User is not authorized to update a Changeset.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "InsufficientPermissions",
                                        "message": "The user has insufficient permissions for the requested operation."
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Specified iModel, Changeset, Briefcase or file was not found. FileNotFound will be returned if the server cannot find the uploaded Changeset file.",
                        "content": {
                            "application/json;iModelNotFound": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "iModelNotFound",
                                        "message": "Requested iModel is not available."
                                    }
                                }
                            },
                            "application/json;ChangesetNotFound": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "ChangesetNotFound",
                                        "message": "Requested Changeset is not available."
                                    }
                                }
                            },
                            "application/json;FileNotFound": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "FileNotFound",
                                        "message": "Requested file is not available. File was not uploaded to file storage."
                                    }
                                }
                            },
                            "application/json;BriefcaseNotFound": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "BriefcaseNotFound",
                                        "message": "Requested Briefcase is not available."
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Changeset already exists or another user is currently pushing a Changeset.",
                        "content": {
                            "application/json;ConflictWithAnotherUser": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "ConflictWithAnotherUser",
                                        "message": "Another user is pushing a Changeset."
                                    }
                                }
                            },
                            "application/json;ChangesetExists": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "ChangesetExists",
                                        "message": "Changeset with the same id already exists within the iModel."
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The 422 (Unprocessable Entity) status code indicates that the request cannot be processed by the server due to a client error (e.g. malformed request syntax)",
                        "content": {
                            "application/json;InvalidiModelsRequest": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "InvalidiModelsRequest",
                                        "message": "Cannot update Changeset.",
                                        "details": [
                                            {
                                                "code": "InvalidValue",
                                                "message": "Provided 'state' value is not valid. Should be set to 'fileUploaded'.",
                                                "target": "state"
                                            },
                                            {
                                                "code": "MissingRequiredProperty",
                                                "message": "Required property is missing.",
                                                "target": "state"
                                            },
                                            {
                                                "code": "InvalidRequestBody",
                                                "message": "Failed to parse request body. Make sure it is a valid JSON."
                                            }
                                        ]
                                    }
                                }
                            },
                            "application/json;MissingRequestBody": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "MissingRequestBody",
                                        "message": "Request body was not provided."
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "This response indicates that the user has sent too many requests in a given amount of time.",
                        "headers": {
                            "retry-after": {
                                "description": "The number of requests exceeds the rate-limit for the client subscription.",
                                "required": true,
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "TooManyRequests",
                                        "message": "More requests were received than the subscription rate-limit allows."
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{id}/briefcases/{briefcaseId}": {
            "get": {
                "tags": [
                    "Briefcases"
                ],
                "summary": "Get iModel Briefcase",
                "description": "---\r\n\r\nRetrieves the details of a [Briefcase](https://www.itwinjs.org/learning/glossary/#briefcase).\r\n\r\nBriefcases are the local copies of iModel that users can acquire to work with the iModel. Users can make changes to their copy of iModel and then push them as a single Changeset file into iModelHub. For more information on Briefcases see [working with Briefcases](https://www.itwinjs.org/learning/imodelhub/briefcases/).\r\n\r\n### Authentication\r\n\r\nRequires `Authorization` header with valid Bearer token for scope `imodels:read`.\r\n\r\nFor more documentation on authorization and how to get access token visit [OAUTH2 Authorization](https://developer.bentley.com/apis/overview/authorization/) page.\r\n\r\n### Authorization\r\n\r\nUser must have `imodels_webview` permission assigned at the iModel level and at least `imodels_webview` permission assigned at the Project level. If permissions at the iModel level are not configured, then user must have `imodels_webview` permission assigned at the Project level.\r\n\r\nAlternatively the user should be an Organization Administrator for the Organization that owns a given Project the iModel belongs to.\r\n\r\nAn Organization Administrator must have at least one of the following roles assigned in User Management: Account Administrator, Co-Administrator, or CONNECT Services Administrator. For more information about User Management please visit our Bentley Communities [Licensing, Cloud, and Web Services](https://communities.bentley.com/communities/other_communities/licensing_cloud_and_web_services/w/wiki/50711/user-management-2-0) wiki page.\r\n\r\n### Rate limits\r\n\r\nAll iTwin Platform API operations have a rate limit. For more documentation on that visit [Rate limits and quotas](https://developer.bentley.com/apis/overview/rate-limits/) page.\r\n\r\n---\r\n",
                "operationId": "get-imodel-briefcase-details",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "iModel id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "briefcaseId",
                        "in": "path",
                        "description": "Briefcase id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "OAuth access token with scope `imodels:read`",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "Setting to `application/vnd.bentley.itwin-platform.v1+json` is recommended.",
                        "schema": {
                            "enum": [
                                "application/vnd.bentley.itwin-platform.v1+json"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BriefcaseResponse"
                                },
                                "example": {
                                    "briefcase": {
                                        "id": "2",
                                        "briefcaseId": 2,
                                        "displayName": "#2 Device Name",
                                        "ownerId": "42101fba-847a-4f4e-85a8-a4bed89065e4",
                                        "acquiredDateTime": "2020-10-20T10:51:33.17+00:00",
                                        "fileSize": 2048,
                                        "deviceName": "Device Name",
                                        "_links": {
                                            "owner": {
                                                "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/users/42101fba-847a-4f4e-85a8-a4bed89065e4"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "This response indicates that request lacks valid authentication credentials. Access token might not been provided, issued by the wrong issuer, does not have required scopes or request headers were malformed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "Unauthorized",
                                        "message": "Access denied due to invalid access_token. Make sure to provide a valid token for this API endpoint."
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Specified iModel or Briefcase was not found.",
                        "content": {
                            "application/json;iModelNotFound": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "iModelNotFound",
                                        "message": "Requested iModel is not available."
                                    }
                                }
                            },
                            "application/json;BriefcaseNotFound": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "BriefcaseNotFound",
                                        "message": "Requested Briefcase is not available."
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "This response indicates that the user has sent too many requests in a given amount of time.",
                        "headers": {
                            "retry-after": {
                                "description": "The number of requests exceeds the rate-limit for the client subscription.",
                                "required": true,
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "TooManyRequests",
                                        "message": "More requests were received than the subscription rate-limit allows."
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Briefcases"
                ],
                "summary": "Release iModel Briefcase",
                "description": "---\r\n\r\nDeletes the specified [Briefcase](https://www.itwinjs.org/learning/glossary/#briefcase).\r\n\r\nBriefcases are the local copies of iModel that users can acquire to work with the iModel. Users can make changes to their copy of iModel and then push them as a single Changeset file into iModelHub. For more information on Briefcases see [working with Briefcases](https://www.itwinjs.org/learning/imodelhub/briefcases/).\r\n\r\n### Authentication\r\n\r\nRequires `Authorization` header with valid Bearer token for scope `imodels:modify`.\r\n\r\nFor more documentation on authorization and how to get access token visit [OAUTH2 Authorization](https://developer.bentley.com/apis/overview/authorization/) page.\r\n\r\n### Authorization\r\n\r\nTo release any Briefcase user must have `imodels_manage` permission assigned at the iModel level. If permissions at the iModel level are not configured, then user must have `imodels_manage` permission assigned at the Project level. To release a Briefcase that the user owns `imodels_webview` permission is enough.\r\n\r\nAlternatively the user should be an Organization Administrator for the Organization that owns a given Project the iModel belongs to.\r\n\r\nAn Organization Administrator must have at least one of the following roles assigned in User Management: Account Administrator, Co-Administrator, or CONNECT Services Administrator. For more information about User Management please visit our Bentley Communities [Licensing, Cloud, and Web Services](https://communities.bentley.com/communities/other_communities/licensing_cloud_and_web_services/w/wiki/50711/user-management-2-0) wiki page.\r\n\r\n### Rate limits\r\n\r\nAll iTwin Platform API operations have a rate limit. For more documentation on that visit [Rate limits and quotas](https://developer.bentley.com/apis/overview/rate-limits/) page.\r\n\r\n---",
                "operationId": "release-imodel-briefcase",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "iModel id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "briefcaseId",
                        "in": "path",
                        "description": "Briefcase id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "OAuth access token with scope `imodels:modify`",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "Setting to `application/vnd.bentley.itwin-platform.v1+json` is recommended.",
                        "schema": {
                            "enum": [
                                "application/vnd.bentley.itwin-platform.v1+json"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "This response indicates that request lacks valid authentication credentials. Access token might not been provided, issued by the wrong issuer, does not have required scopes or request headers were malformed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "Unauthorized",
                                        "message": "Access denied due to invalid access_token. Make sure to provide a valid token for this API endpoint."
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "User is not authorized to release a Briefcase.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "InsufficientPermissions",
                                        "message": "The user has insufficient permissions for the requested operation."
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Specified iModel or Briefcase was not found.",
                        "content": {
                            "application/json;iModelNotFound": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "iModelNotFound",
                                        "message": "Requested iModel is not available."
                                    }
                                }
                            },
                            "application/json;BriefcaseNotFound": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "BriefcaseNotFound",
                                        "message": "Requested Briefcase is not available."
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "This response indicates that the user has sent too many requests in a given amount of time.",
                        "headers": {
                            "retry-after": {
                                "description": "The number of requests exceeds the rate-limit for the client subscription.",
                                "required": true,
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "TooManyRequests",
                                        "message": "More requests were received than the subscription rate-limit allows."
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{id}/changesets/{changeset}": {
            "get": {
                "tags": [
                    "Changesets"
                ],
                "summary": "Get iModel Changeset",
                "description": "---\r\n\r\nRetrieves the metadata of a [Changeset](https://www.itwinjs.org/learning/glossary/#changeset).\r\n\r\nFor more information on creating and retrieving Changesets using iModel.js see [working with Changesets](https://www.itwinjs.org/learning/imodelhub/briefcases/).\r\n\r\n### Authentication\r\n\r\nRequires `Authorization` header with valid Bearer token for scope `imodels:read`.\r\n\r\nFor more documentation on authorization and how to get access token visit [OAUTH2 Authorization](https://developer.bentley.com/apis/overview/authorization/) page.\r\n\r\n### Authorization\r\n\r\nUser must have `imodels_webview` permission assigned at the iModel level and at least `imodels_webview` permission assigned at the Project level. If permissions at the iModel level are not configured, then user must have `imodels_webview` permission assigned at the Project level.\r\n\r\nAlternatively the user should be an Organization Administrator for the Organization that owns a given Project the iModel belongs to.\r\n\r\nAn Organization Administrator must have at least one of the following roles assigned in User Management: Account Administrator, Co-Administrator, or CONNECT Services Administrator. For more information about User Management please visit our Bentley Communities [Licensing, Cloud, and Web Services](https://communities.bentley.com/communities/other_communities/licensing_cloud_and_web_services/w/wiki/50711/user-management-2-0) wiki page.\r\n\r\n**Note:** `download` property requires user to have at least `imodels_read` permission. If user has only `imodels_webview` permission `download` will always be null.\r\n\r\n### Rate limits\r\n\r\nAll iTwin Platform API operations have a rate limit. For more documentation on that visit [Rate limits and quotas](https://developer.bentley.com/apis/overview/rate-limits/) page.\r\n\r\n---\r\n",
                "operationId": "get-imodel-changeset-details",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "iModel id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "changeset",
                        "in": "path",
                        "description": "Changeset id or index",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "OAuth access token with scope `imodels:read`",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "Setting to `application/vnd.bentley.itwin-platform.v1+json` is recommended.",
                        "schema": {
                            "enum": [
                                "application/vnd.bentley.itwin-platform.v1+json"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ChangesetResponse"
                                },
                                "example": {
                                    "changeset": {
                                        "id": "1f2e04b666edce395e37a795e2231e995cbf8349",
                                        "displayName": "256",
                                        "description": "Changeset 15",
                                        "index": 256,
                                        "parentId": "f7618612c572d7db8e3e6095d622d0d8aff22874",
                                        "creatorId": "ea4dfb9f-7f66-4c6f-82c5-0efad1636a1f",
                                        "pushDateTime": "2020-10-21T06:35:30.7+00:00",
                                        "state": "fileUploaded",
                                        "containingChanges": 0,
                                        "fileSize": 109,
                                        "briefcaseId": 2,
                                        "application": {
                                            "name": "iTwin Synchronizer"
                                        },
                                        "synchronizationInfo": {
                                            "changedFiles": [
                                                "File1.dgn",
                                                "File2.dgn"
                                            ]
                                        },
                                        "_links": {
                                            "creator": {
                                                "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/users/ea4dfb9f-7f66-4c6f-82c5-0efad1636a1f"
                                            },
                                            "namedVersion": {
                                                "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/namedversions/0c18d073-d1e2-4862-9d6b-a5a63ade4f52"
                                            },
                                            "self": {
                                                "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/changesets/1f2e04b666edce395e37a795e2231e995cbf8349"
                                            },
                                            "download": {
                                                "href": "https://imodelhub.blob.core.windows.net/imodelhub-5e19bee0-3aea-4355-a9f0-c6df9989ee7d/1f2e04b666edce395e37a795e2231e995cbf8349.cs?sv=2019-07-07&sr=b&sig=ByGsPs4cwKyUfnV6%2BjDZFDL3J7QiE0vl917MCX%2FC35Y%3D&st=2021-07-30T10%3A53%3A09.5224547Z&se=2021-07-30T11%3A13%3A09.5224552Z&sp=r"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "This response indicates that request lacks valid authentication credentials. Access token might not been provided, issued by the wrong issuer, does not have required scopes or request headers were malformed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "Unauthorized",
                                        "message": "Access denied due to invalid access_token. Make sure to provide a valid token for this API endpoint."
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Specified iModel or Changeset was not found.",
                        "content": {
                            "application/json;iModelNotFound": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "iModelNotFound",
                                        "message": "Requested iModel is not available."
                                    }
                                }
                            },
                            "application/json;ChangesetNotFound": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "ChangesetNotFound",
                                        "message": "Requested Changeset is not available."
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "This response indicates that the user has sent too many requests in a given amount of time.",
                        "headers": {
                            "retry-after": {
                                "description": "The number of requests exceeds the rate-limit for the client subscription.",
                                "required": true,
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "TooManyRequests",
                                        "message": "More requests were received than the subscription rate-limit allows."
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{id}/namedversions/{namedVersionId}": {
            "get": {
                "tags": [
                    "Named Versions"
                ],
                "summary": "Get iModel Named Version",
                "description": "---\r\n\r\nRetrieves the details of a Named Version.\r\n\r\nEvery [Changeset](https://www.itwinjs.org/learning/glossary/#changeset) on the timeline creates a new version of the iModel. However, some points on the timeline can represent important milestones or significant events to be saved. iModelHub provides a way to mark a point on the timeline with a name. These time points are referred to as Named Versions.\r\n\r\n### Authentication\r\n\r\nRequires `Authorization` header with valid Bearer token for scope `imodels:read`.\r\n\r\nFor more documentation on authorization and how to get access token visit [OAUTH2 Authorization](https://developer.bentley.com/apis/overview/authorization/) page.\r\n\r\n### Authorization\r\n\r\nUser must have `imodels_webview` permission assigned at the iModel level and at least `imodels_webview` permission assigned at the Project level. If permissions at the iModel level are not configured, then user must have `imodels_webview` permission assigned at the Project level.\r\n\r\nAlternatively the user should be an Organization Administrator for the Organization that owns a given Project the iModel belongs to.\r\n\r\nAn Organization Administrator must have at least one of the following roles assigned in User Management: Account Administrator, Co-Administrator, or CONNECT Services Administrator. For more information about User Management please visit our Bentley Communities [Licensing, Cloud, and Web Services](https://communities.bentley.com/communities/other_communities/licensing_cloud_and_web_services/w/wiki/50711/user-management-2-0) wiki page.\r\n\r\n### Rate limits\r\n\r\nAll iTwin Platform API operations have a rate limit. For more documentation on that visit [Rate limits and quotas](https://developer.bentley.com/apis/overview/rate-limits/) page.\r\n\r\n---\r\n",
                "operationId": "get-imodel-named-version-details",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "iModel id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "namedVersionId",
                        "in": "path",
                        "description": "Named Version id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "OAuth access token with scope `imodels:read`",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "Setting to `application/vnd.bentley.itwin-platform.v1+json` is recommended.",
                        "schema": {
                            "enum": [
                                "application/vnd.bentley.itwin-platform.v1+json"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NamedVersionResponse"
                                },
                                "example": {
                                    "namedVersion": {
                                        "id": "3020441b-e179-4334-a59a-4fb8deb93df1",
                                        "displayName": "Wind farm design",
                                        "changesetId": "1f2e04b666edce395e37a795e2231e995cbf8349",
                                        "changesetIndex": 14,
                                        "name": "Wind farm design",
                                        "description": "Finalized wind farm design in Sun City",
                                        "createdDateTime": "2020-10-21T06:42:57.67+00:00",
                                        "state": "visible",
                                        "_links": {
                                            "creator": {
                                                "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/users/ea4dfb9f-7f66-4c6f-82c5-0efad1636a1f"
                                            },
                                            "changeset": {
                                                "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/changesets/1f2e04b666edce395e37a795e2231e995cbf8349"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "This response indicates that request lacks valid authentication credentials. Access token might not been provided, issued by the wrong issuer, does not have required scopes or request headers were malformed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "Unauthorized",
                                        "message": "Access denied due to invalid access_token. Make sure to provide a valid token for this API endpoint."
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested iModel or Named Version was not found.",
                        "content": {
                            "application/json;iModelNotFound": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "iModelNotFound",
                                        "message": "Requested iModel is not available."
                                    }
                                }
                            },
                            "application/json;NamedVersionNotFound": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "NamedVersionNotFound",
                                        "message": "Requested Named Version is not available."
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "This response indicates that the user has sent too many requests in a given amount of time.",
                        "headers": {
                            "retry-after": {
                                "description": "The number of requests exceeds the rate-limit for the client subscription.",
                                "required": true,
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "TooManyRequests",
                                        "message": "More requests were received than the subscription rate-limit allows."
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Named Versions"
                ],
                "summary": "Update iModel Named Version",
                "description": "---\r\n\r\nUpdate metadata of a [Named Version](https://www.itwinjs.org/learning/glossary/#namedversion).\r\n\r\nEvery [Changeset](https://www.itwinjs.org/learning/glossary/#changeset) on the timeline creates a new version of the iModel. However, some points on the timeline can represent important milestones or significant events to be saved. iModelHub provides a way to mark a point on the timeline with a name. These time points are referred to as Named Versions.\r\n\r\n### Authentication\r\n\r\nRequires `Authorization` header with valid Bearer token for scope `imodels:modify`.\r\n\r\nFor more documentation on authorization and how to get access token visit [OAUTH2 Authorization](https://developer.bentley.com/apis/overview/authorization/) page.\r\n\r\n### Authorization\r\n\r\nUser must have `imodels_write` permission assigned at the iModel level and at least `imodels_webview` permission assigned at the Project level. If permissions at the iModel level are not configured, then user must have `imodels_write` permission assigned at the Project level.\r\n\r\nAlternatively the user should be an Organization Administrator for the Organization that owns a given Project the iModel belongs to.\r\n\r\nAn Organization Administrator must have at least one of the following roles assigned in User Management: Account Administrator, Co-Administrator, or CONNECT Services Administrator. For more information about User Management please visit our Bentley Communities [Licensing, Cloud, and Web Services](https://communities.bentley.com/communities/other_communities/licensing_cloud_and_web_services/w/wiki/50711/user-management-2-0) wiki page.\r\n\r\n### Rate limits\r\n\r\nAll iTwin Platform API operations have a rate limit. For more documentation on that visit [Rate limits and quotas](https://developer.bentley.com/apis/overview/rate-limits/) page.\r\n\r\n---\r\n",
                "operationId": "update-imodel-named-version",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "iModel id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "namedVersionId",
                        "in": "path",
                        "description": "Named Version id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "OAuth access token with scope `imodels:modify`",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "Setting to `application/vnd.bentley.itwin-platform.v1+json` is recommended.",
                        "schema": {
                            "enum": [
                                "application/vnd.bentley.itwin-platform.v1+json"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Indicates request body content type. Supported media type is `application/json`.",
                        "schema": {
                            "enum": [
                                "application/json"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NamedVersionUpdate"
                            },
                            "example": {
                                "name": "Wind farm design",
                                "description": "Finalized wind farm design in Sun City",
                                "state": "hidden"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NamedVersionResponse"
                                },
                                "example": {
                                    "namedVersion": {
                                        "id": "3020441b-e179-4334-a59a-4fb8deb93df1",
                                        "displayName": "Wind farm design",
                                        "changesetId": "1f2e04b666edce395e37a795e2231e995cbf8349",
                                        "changesetIndex": 14,
                                        "name": "Wind farm design",
                                        "description": "Finalized wind farm design in Sun City",
                                        "createdDateTime": "2020-10-21T06:42:57.67+00:00",
                                        "state": "visible",
                                        "_links": {
                                            "creator": {
                                                "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/users/ea4dfb9f-7f66-4c6f-82c5-0efad1636a1f"
                                            },
                                            "changeset": {
                                                "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/changesets/1f2e04b666edce395e37a795e2231e995cbf8349"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "This response indicates that request lacks valid authentication credentials. Access token might not been provided, issued by the wrong issuer, does not have required scopes or request headers were malformed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "Unauthorized",
                                        "message": "Access denied due to invalid access_token. Make sure to provide a valid token for this API endpoint."
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "User is not authorized to update a Named Version.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "InsufficientPermissions",
                                        "message": "The user has insufficient permissions for the requested operation."
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Specified iModel or Named Version was not found.",
                        "content": {
                            "application/json;iModelNotFound": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "iModelNotFound",
                                        "message": "Requested iModel is not available."
                                    }
                                }
                            },
                            "application/json;NamedVersionNotFound": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "NamedVersionNotFound",
                                        "message": "Requested Named Version is not available."
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Named Version with the same name already exists within the iModel.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "NamedVersionExists",
                                        "message": "Named Version with the same name already exists within the iModel."
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The 422 (Unprocessable Entity) status code indicates that the request cannot be processed by the server due to a client error (e.g. malformed request syntax)",
                        "content": {
                            "application/json;InvalidiModelsRequest": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "InvalidiModelsRequest",
                                        "message": "Cannot update Named Version.",
                                        "details": [
                                            {
                                                "code": "InvalidValue",
                                                "message": "Provided 'name' is not valid. The value exceeds allowed 255 characters.",
                                                "target": "id"
                                            },
                                            {
                                                "code": "InvalidHeaderValue",
                                                "message": "'application/xml' is not supported 'content-type'. Supported media type is 'application/json'.",
                                                "target": "content-type"
                                            },
                                            {
                                                "code": "MissingRequiredProperty",
                                                "message": "Required property is missing. At least one of the following properties must be provided: 'name', 'description', 'state'."
                                            },
                                            {
                                                "code": "InvalidRequestBody",
                                                "message": "Failed to parse request body. Make sure it is a valid JSON."
                                            }
                                        ]
                                    }
                                }
                            },
                            "application/json;MissingRequestBody": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "MissingRequestBody",
                                        "message": "Request body was not provided."
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "This response indicates that the user has sent too many requests in a given amount of time.",
                        "headers": {
                            "retry-after": {
                                "description": "The number of requests exceeds the rate-limit for the client subscription.",
                                "required": true,
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "TooManyRequests",
                                        "message": "More requests were received than the subscription rate-limit allows."
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{id}/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get iModel Users",
                "description": "---\r\n\r\nRetrieves a list of users who have ever been connected to the iModel specified by the iModel id.\r\n\r\n### Notes\r\n\r\nThe `Prefer` header can be used to specify how much result metadata is desired by the client. The `Prefer` request header field is used to indicate that particular server behaviors are preferred by the client but are not required for successful completion of the request.\r\n\r\nThis operation supports `\"return=representation\"` and `\"return=minimal\"` preferences.\r\n\r\nThe `\"return=representation\"` preference indicates that the client prefers that the server include an entity representing the current state of the resource in the response to a successful request.\r\nThe `\"return=minimal\"` preference indicates that the client wishes the server to return only a minimal response to a successful request. This is the default preference if `Prefer` header is not specified.\r\n\r\n### Authentication\r\n\r\nRequires `Authorization` header with valid Bearer token for scope `imodels:read`.\r\n\r\nFor more documentation on authorization and how to get access token visit [OAUTH2 Authorization](https://developer.bentley.com/apis/overview/authorization/) page.\r\n\r\n### Authorization\r\n\r\nUser must have `imodels_webview` permission assigned at the iModel level and at least `imodels_webview` permission assigned at the Project level. If permissions at the iModel level are not configured, then user must have `imodels_webview` permission assigned at the Project level.\r\n\r\nAlternatively the user should be an Organization Administrator for the Organization that owns a given Project the iModel belongs to.\r\n\r\nAn Organization Administrator must have at least one of the following roles assigned in User Management: Account Administrator, Co-Administrator, or CONNECT Services Administrator. For more information about User Management please visit our Bentley Communities [Licensing, Cloud, and Web Services](https://communities.bentley.com/communities/other_communities/licensing_cloud_and_web_services/w/wiki/50711/user-management-2-0) wiki page.\r\n\r\n### Rate limits\r\n\r\nAll iTwin Platform API operations have a rate limit. For more documentation on that visit [Rate limits and quotas](https://developer.bentley.com/apis/overview/rate-limits/) page.\r\n\r\n---\r\n",
                "operationId": "get-imodel-users",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "iModel id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "The $top query option requests the number of items in the queried collection to be included in the result. E.g. to return only first collection item provide the following query: $top=1. When $top parameter is not provided default is set to 100. $top value cannot exceed 1000.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "The $skip query option requests the number of items in the queried collection that are to be skipped and not included in the result. E.g. to return items from the collection starting at the third place provide the following query: $skip=2.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "OAuth access token with scope `imodels:read`",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "Setting to `application/vnd.bentley.itwin-platform.v1+json` is recommended.",
                        "schema": {
                            "enum": [
                                "application/vnd.bentley.itwin-platform.v1+json"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "Prefer",
                        "in": "header",
                        "description": "Indicates a level of details in the response. This operation supports 'return=representation' and 'return=minimal' preferences.",
                        "schema": {
                            "enum": [
                                "return=minimal",
                                "return=representation"
                            ],
                            "type": "string",
                            "default": "return=minimal"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json;minimal": {
                                "schema": {
                                    "$ref": "#/components/schemas/UsersMinimal"
                                },
                                "example": {
                                    "users": [
                                        {
                                            "id": "ea4dfb9f-7f66-4c6f-82c5-0efad1636a1f",
                                            "displayName": "hanson.deck@cohesivecompanies.com",
                                            "_links": {
                                                "self": {
                                                    "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/users/ea4dfb9f-7f66-4c6f-82c5-0efad1636a1f"
                                                }
                                            }
                                        },
                                        {
                                            "id": "cdde5818-21ff-4e54-a014-cf1d85205896",
                                            "displayName": "hans.down@cohesivecompanies.com",
                                            "_links": {
                                                "self": {
                                                    "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/users/cdde5818-21ff-4e54-a014-cf1d85205896"
                                                }
                                            }
                                        }
                                    ],
                                    "_links": {
                                        "self": {
                                            "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/users?$skip=0&$top=100"
                                        },
                                        "prev": {
                                            "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/users?$skip=0&$top=100"
                                        },
                                        "next": {
                                            "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/users?$skip=100&$top=100"
                                        }
                                    }
                                }
                            },
                            "application/json;representation": {
                                "schema": {
                                    "$ref": "#/components/schemas/UsersRepresentation"
                                },
                                "example": {
                                    "users": [
                                        {
                                            "id": "ea4dfb9f-7f66-4c6f-82c5-0efad1636a1f",
                                            "displayName": "hanson.deck@cohesivecompanies.com",
                                            "givenName": "Hanson",
                                            "surname": "Deck",
                                            "email": "hanson.deck@cohesivecompanies.com",
                                            "_links": {
                                                "self": {
                                                    "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/users/ea4dfb9f-7f66-4c6f-82c5-0efad1636a1f"
                                                }
                                            }
                                        },
                                        {
                                            "id": "cdde5818-21ff-4e54-a014-cf1d85205896",
                                            "displayName": "hans.down@cohesivecompanies.com",
                                            "givenName": "Hans",
                                            "surname": "Down",
                                            "email": "hans.down@cohesivecompanies.com",
                                            "_links": {
                                                "self": {
                                                    "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/users/cdde5818-21ff-4e54-a014-cf1d85205896"
                                                }
                                            }
                                        }
                                    ],
                                    "_links": {
                                        "self": {
                                            "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/users?$skip=0&$top=100"
                                        },
                                        "prev": {
                                            "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/users?$skip=0&$top=100"
                                        },
                                        "next": {
                                            "href": "https://api.bentley.com/imodels/5e19bee0-3aea-4355-a9f0-c6df9989ee7d/users?$skip=100&$top=100"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "This response indicates that request lacks valid authentication credentials. Access token might not been provided, issued by the wrong issuer, does not have required scopes or request headers were malformed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "Unauthorized",
                                        "message": "Access denied due to invalid access_token. Make sure to provide a valid token for this API endpoint."
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested iModel is not available.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "iModelNotFound",
                                        "message": "Requested iModel is not available."
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The 422 (Unprocessable Entity) status code indicates that the request cannot be processed by the server due to a client error (e.g. malformed request syntax)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "InvalidiModelsRequest",
                                        "message": "Cannot get users.",
                                        "details": [
                                            {
                                                "code": "InvalidValue",
                                                "message": "'-1' is not a valid '$skip' value. '$skip' must be a non-negative integer.",
                                                "target": "$skip"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "This response indicates that the user has sent too many requests in a given amount of time.",
                        "headers": {
                            "retry-after": {
                                "description": "The number of requests exceeds the rate-limit for the client subscription.",
                                "required": true,
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": {
                                        "code": "TooManyRequests",
                                        "message": "More requests were received than the subscription rate-limit allows."
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "iModelResponse": {
                "title": "iModel Response",
                "type": "object",
                "properties": {
                    "iModel": {
                        "$ref": "#/components/schemas/iModel"
                    }
                },
                "description": "Container for iModel object."
            },
            "CreatediModelResponse": {
                "title": "Created iModel Response",
                "type": "object",
                "properties": {
                    "iModel": {
                        "$ref": "#/components/schemas/CreatediModel"
                    }
                },
                "description": "Container for iModel object."
            },
            "iModelSummary": {
                "title": "iModel (summary)",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id of the iModel"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Display name of the iModel. Corresponds to Name property."
                    }
                },
                "description": "Summarized representation of the iModel."
            },
            "iModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id of the iModel"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Display name of the iModel. Corresponds to Name property."
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the iModel."
                    },
                    "description": {
                        "description": "Description of the iModel."
                    },
                    "createdDateTime": {
                        "type": "string",
                        "description": "Date when the iModel was created."
                    },
                    "projectId": {
                        "type": "string",
                        "description": "Id of the project that iModel belongs to."
                    },
                    "extent": {
                        "$ref": "#/components/schemas/Extent"
                    },
                    "state": {
                        "enum": [
                            "initialized",
                            "notInitialized"
                        ],
                        "type": "string",
                        "description": "Indicates the state of the iModel. Possible values: 'initialized', 'notInitialized'."
                    },
                    "_links": {
                        "$ref": "#/components/schemas/iModelLinks"
                    }
                },
                "description": "Full representation of the iModel."
            },
            "CreatediModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id of the iModel"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Display name of the iModel. Corresponds to Name property."
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the iModel."
                    },
                    "description": {
                        "description": "Description of the iModel."
                    },
                    "createdDateTime": {
                        "type": "string",
                        "description": "Date when the iModel was created."
                    },
                    "projectId": {
                        "type": "string",
                        "description": "Id of the project that iModel belongs to."
                    },
                    "extent": {
                        "$ref": "#/components/schemas/Extent"
                    },
                    "state": {
                        "enum": [
                            "initialized",
                            "notInitialized"
                        ],
                        "type": "string",
                        "description": "Indicates the state of the iModel. Possible values: 'initialized', 'notInitialized'."
                    },
                    "_links": {
                        "$ref": "#/components/schemas/CreatediModelLinks"
                    }
                },
                "description": "Full representation of the iModel."
            },
            "iModelCreate": {
                "title": "iModel (create)",
                "required": [
                    "name",
                    "projectId"
                ],
                "type": "object",
                "properties": {
                    "projectId": {
                        "type": "string",
                        "description": "Id of the Project that created iModel should belong to."
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the iModel."
                    },
                    "description": {
                        "description": "Description of the iModel."
                    },
                    "extent": {
                        "$ref": "#/components/schemas/Extent"
                    },
                    "template": {
                        "$ref": "#/components/schemas/iModelTemplate"
                    },
                    "baselineFile": {
                        "$ref": "#/components/schemas/BaselineFileCreate"
                    }
                },
                "description": "Properties of the iModel to be created."
            },
            "iModelUpdate": {
                "title": "iModel (update)",
                "type": "object",
                "properties": {
                    "name": {
                        "description": "Name of the iModel."
                    },
                    "description": {
                        "description": "Description of the iModel."
                    },
                    "extent": {
                        "$ref": "#/components/schemas/Extent"
                    }
                },
                "description": "Properties of the iModel to be updated."
            },
            "iModelsMinimal": {
                "title": "iModels (prefer return=minimal)",
                "type": "object",
                "properties": {
                    "iModels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/iModelSummary"
                        },
                        "description": "List of iModels."
                    },
                    "_links": {
                        "$ref": "#/components/schemas/PagingLinks"
                    }
                },
                "description": "List of iModels."
            },
            "iModelsRepresentation": {
                "title": "iModels (prefer return=representation)",
                "type": "object",
                "properties": {
                    "iModels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/iModel"
                        },
                        "description": "List of iModels."
                    },
                    "_links": {
                        "$ref": "#/components/schemas/PagingLinks"
                    }
                },
                "description": "List of iModels."
            },
            "iModelTemplate": {
                "title": "iModel Template",
                "required": [
                    "iModelId"
                ],
                "properties": {
                    "iModelId": {
                        "type": "string",
                        "description": "Id of the iModel which to use as a template."
                    },
                    "changesetId": {
                        "description": "iModel timeline point to use as a template identified by the Changeset. When Changeset is not provided baseline is used."
                    }
                },
                "description": "Used for specifying the iModel template during iModel creation."
            },
            "BaselineFileCreate": {
                "title": "Baseline File",
                "required": [
                    "size"
                ],
                "properties": {
                    "size": {
                        "type": "integer",
                        "description": "Size of the Baseline File in bytes. It is important to set accurate file size or the iModel creation will fail later.",
                        "format": "int64"
                    }
                },
                "description": "Used for describing Baseline File during iModel creation."
            },
            "BaselineFileResponse": {
                "title": "Baseline File Response",
                "type": "object",
                "properties": {
                    "baselineFile": {
                        "$ref": "#/components/schemas/BaselineFile"
                    }
                },
                "description": "Container for Baseline File object."
            },
            "BaselineFile": {
                "title": "Baseline File",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id of the Baseline File."
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Name of the Baseline File."
                    },
                    "size": {
                        "type": "integer",
                        "description": "Size of the Baseline File in bytes.",
                        "format": "int64"
                    },
                    "state": {
                        "enum": [
                            "initialized",
                            "initializationScheduled",
                            "initializationFailed",
                            "waitingForFile",
                            "fileIsBriefcase"
                        ],
                        "type": "string",
                        "description": "Indicates the state of the Baseline File. 'initialized' - Baseline File is initialized. 'initializationScheduled' - Baseline File creation is complete and initialization is scheduled or currently in progress. 'waitingForFile' - file upload to file storage hasn't been completed yet. 'initializationFailed' - initializing Baseline File failed. 'fileIsBriefcase' - file is not a standalone iModel and cannot be used as a Baseline File."
                    },
                    "_links": {
                        "$ref": "#/components/schemas/BaselineFileLinks"
                    }
                },
                "description": "Metadata of Baseline File of the iModel."
            },
            "BriefcaseResponse": {
                "title": "Briefcase Response",
                "type": "object",
                "properties": {
                    "briefcase": {
                        "$ref": "#/components/schemas/Briefcase"
                    }
                },
                "description": "Container for Briefcase object."
            },
            "BriefcaseAcquire": {
                "title": "Briefcase (acquire)",
                "type": "object",
                "properties": {
                    "deviceName": {
                        "description": "Name of the device which will hold the briefcase."
                    }
                },
                "description": "Properties of the Breifcase to be acquired."
            },
            "BriefcaseSummary": {
                "title": "Briefcase (summary)",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id of the Briefcase."
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Display name of the Briefcase. Corresponds to id and deviceName properties."
                    }
                },
                "description": "Summarized representation of the Briefcase."
            },
            "Briefcase": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id of the Briefcase."
                    },
                    "briefcaseId": {
                        "type": "integer",
                        "description": "Id of the Briefcase as an integer."
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Display name of the Briefcase. Corresponds to id and deviceName properties."
                    },
                    "acquiredDateTime": {
                        "type": "string",
                        "description": "Date when the Briefcase was acquired."
                    },
                    "fileSize": {
                        "type": "integer",
                        "description": "Size of the Briefcase in bytes."
                    },
                    "deviceName": {
                        "description": "Name of the device which will hold the briefcase."
                    },
                    "_links": {
                        "$ref": "#/components/schemas/BriefcaseLinks"
                    }
                },
                "description": "Briefcase is a file holding a copy of an iModel."
            },
            "BriefcasesMinimal": {
                "title": "Briefcases (prefer return=minimal)",
                "type": "object",
                "properties": {
                    "Briefcases": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BriefcaseSummary"
                        },
                        "description": "Briefcases of the iModel."
                    }
                },
                "description": "List of Briefcases in minimal representation."
            },
            "BriefcasesRepresentation": {
                "title": "Briefcases (prefer return=representation)",
                "type": "object",
                "properties": {
                    "Briefcases": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Briefcase"
                        },
                        "description": "Briefcases of the iModel."
                    }
                },
                "description": "List of Briefcases in full representation."
            },
            "CheckpointResponse": {
                "title": "Checkpoint Response",
                "type": "object",
                "properties": {
                    "checkpoint": {
                        "$ref": "#/components/schemas/Checkpoint"
                    }
                },
                "description": "Container for Checkpoint object."
            },
            "Checkpoint": {
                "title": "Checkpoint",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id of the Checkpoint."
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Display name of the Checkpoint. Corresponds to `changesetIndex` property."
                    },
                    "changesetIndex": {
                        "type": "integer",
                        "description": "Index of the target changeset.",
                        "format": "int64"
                    },
                    "changesetId": {
                        "description": "Id of the target changeset."
                    },
                    "state": {
                        "enum": [
                            "successful",
                            "scheduled",
                            "failed",
                            "notGenerated"
                        ],
                        "type": "string",
                        "description": "Indicates the state of the Checkpoint. `successful` - Checkpoint is successfully generated. `scheduled` - Checkpoint generation is scheduled or already in progress. `failed` - Checkpoint generation has failed. `notGenerated` - Checkpoint was not generated."
                    },
                    "containerAccessInfo": {
                        "$ref": "#/components/schemas/ContainerAccessInfo"
                    },
                    "_links": {
                        "$ref": "#/components/schemas/CheckpointLinks"
                    }
                },
                "description": "Metadata of a Checkpoint."
            },
            "ContainerAccessInfo": {
                "title": "Container Access Information",
                "properties": {
                    "account": {
                        "type": "string",
                        "description": "Name of the account."
                    },
                    "container": {
                        "type": "string",
                        "description": "Name of the container."
                    },
                    "sas": {
                        "type": "string",
                        "description": "Shared access signature."
                    },
                    "dbName": {
                        "type": "string",
                        "description": "Database name."
                    }
                },
                "description": "Contains information required to access an Azure Blob storage container."
            },
            "ChangesetCreate": {
                "title": "Changeset (create)",
                "required": [
                    "id",
                    "briefcaseId",
                    "fileSize"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id of the changeset."
                    },
                    "description": {
                        "description": "Description of the Changeset."
                    },
                    "parentId": {
                        "description": "Id of the parent Changeset."
                    },
                    "briefcaseId": {
                        "type": "integer",
                        "description": "Id of the briefcase that will be used to create the Changeset."
                    },
                    "fileSize": {
                        "type": "integer",
                        "description": "Size of the Changeset file in bytes."
                    },
                    "containingChanges": {
                        "description": "Describes what type of changes Changeset contains. Tells what changes changeset contains. 0 - regular, 1 - schema, 2 - definition, 4 - spatial data, 8 - sheets and drawings, 16 - views and models, 32 - global properties. ContainingChanges is flag value, therefore all change types, except Schema, can be combined."
                    }
                },
                "description": "Properties of Changeset to be created."
            },
            "ChangesetUpdate": {
                "title": "Changeset (update)",
                "required": [
                    "briefcaseId",
                    "state"
                ],
                "type": "object",
                "properties": {
                    "briefcaseId": {
                        "type": "integer",
                        "description": "Id of the briefcase that was used to create the Changeset."
                    },
                    "state": {
                        "enum": [
                            "waitingForFile",
                            "fileUploaded"
                        ],
                        "type": "string",
                        "description": "Indicates the state of the Changeset. Should be set to 'fileUploaded'."
                    }
                },
                "description": "Properties of Changeset to be updated."
            },
            "ChangesetResponse": {
                "title": "Changeset Response",
                "type": "object",
                "properties": {
                    "changeset": {
                        "$ref": "#/components/schemas/Changeset"
                    }
                },
                "description": "Container for Changeset object."
            },
            "CreatedChangesetResponse": {
                "title": "Created Changeset Response",
                "type": "object",
                "properties": {
                    "changeset": {
                        "$ref": "#/components/schemas/CreatedChangeset"
                    }
                },
                "description": "Container for Created Changeset object."
            },
            "ChangesetSummary": {
                "title": "Changeset (summary)",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id of the changeset."
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Display name of the Changeset. Corresponds to Index property."
                    },
                    "description": {
                        "description": "Description of the Changeset."
                    },
                    "index": {
                        "type": "integer",
                        "description": "Index of the Changeset (increasing, but not necessarily sequential)."
                    },
                    "parentId": {
                        "description": "Id of the parent Changeset."
                    },
                    "creatorId": {
                        "type": "string",
                        "description": "Id of the user who created the Changeset."
                    },
                    "pushDateTime": {
                        "type": "string",
                        "description": "Date when the Changeset was pushed to iModelHub."
                    },
                    "briefcaseId": {
                        "type": "integer",
                        "description": "Id of the briefcase that was used to push the Changeset."
                    },
                    "fileSize": {
                        "type": "integer",
                        "description": "Size of the Changeset file in bytes."
                    },
                    "containingChanges": {
                        "type": "integer",
                        "description": "Describes what type of changes Changeset contains. Tells what changes changeset contains. 0 - regular, 1 - schema, 2 - definition, 4 - spatial data, 8 - sheets and drawings, 16 - views and models, 32 - global properties. ContainingChanges is flag value, therefore all change types, except Schema, can be combined."
                    },
                    "state": {
                        "enum": [
                            "waitingForFile",
                            "fileUploaded"
                        ],
                        "type": "string",
                        "description": "Indicates the state of the Changeset. 'waitingForFile' - indicates that Changeset metadata is created, but Changeset file is not uploaded yet or file upload is not confirmed yet. 'fileUploaded' - indicates that Changeset file is uploaded and confirmed."
                    },
                    "_links": {
                        "$ref": "#/components/schemas/ChangesetLinksSummary"
                    }
                },
                "description": "Summarized representation of the Changeset."
            },
            "Changeset": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id of the changeset."
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Display name of the Changeset. Corresponds to Index property."
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the Changeset."
                    },
                    "index": {
                        "type": "integer",
                        "description": "Index of the Changeset (increasing, but not necessarily sequential)."
                    },
                    "parentId": {
                        "description": "Id of the parent Changeset."
                    },
                    "creatorId": {
                        "type": "string",
                        "description": "Id of the user who created the Changeset."
                    },
                    "pushDateTime": {
                        "type": "string",
                        "description": "Date when the Changeset was pushed to iModelHub."
                    },
                    "briefcaseId": {
                        "type": "integer",
                        "description": "Id of the briefcase that was used to push the Changeset."
                    },
                    "fileSize": {
                        "type": "integer",
                        "description": "Size of the Changeset file in bytes."
                    },
                    "containingChanges": {
                        "type": "integer",
                        "description": "Describes what type of changes Changeset contains. Tells what changes changeset contains. 0 - regular, 1 - schema, 2 - definition, 4 - spatial data, 8 - sheets and drawings, 16 - views and models, 32 - global properties. ContainingChanges is flag value, therefore all change types, except Schema, can be combined."
                    },
                    "state": {
                        "enum": [
                            "waitingForFile",
                            "fileUploaded"
                        ],
                        "type": "string",
                        "description": "Indicates the state of the Changeset. 'waitingForFile' - indicates that Changeset metadata is created, but Changeset file is not uploaded yet or file upload is not confimerd yet. 'fileUploaded' - indicates that Changeset file is uploaded and confirmed."
                    },
                    "application": {
                        "$ref": "#/components/schemas/Application"
                    },
                    "synchronizationInfo": {
                        "$ref": "#/components/schemas/SynchronizationInfo"
                    },
                    "_links": {
                        "$ref": "#/components/schemas/ChangesetLinks"
                    }
                },
                "description": "Changeset represents a file containing changes to the iModel. A single Changeset contains changes made on a single Briefcase file and pushed as a single file."
            },
            "CreatedChangeset": {
                "title": "Created Changeset",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id of the changeset."
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Display name of the Changeset. Corresponds to Index property."
                    },
                    "description": {
                        "description": "Description of the Changeset."
                    },
                    "index": {
                        "type": "integer",
                        "description": "Index of the Changeset (increasing, but not necessarily sequential)."
                    },
                    "parentId": {
                        "description": "Id of the parent Changeset."
                    },
                    "creatorId": {
                        "description": "Id of the user who created the Changeset."
                    },
                    "pushDateTime": {
                        "description": "Date when the Changeset was pushed to iModelHub."
                    },
                    "briefcaseId": {
                        "type": "integer",
                        "description": "Id of the briefcase that was used to push the Changeset."
                    },
                    "fileSize": {
                        "type": "integer",
                        "description": "Size of the Changeset file in bytes."
                    },
                    "containingChanges": {
                        "type": "integer",
                        "description": "Describes what type of changes Changeset contains. 0 - regular, 1 - schema, 2 - definition, 4 - spatial data, 8 - sheets and drawings, 16 - views and models, 32 - global properties. ContainingChanges is flag value, therefore all change types, except Schema, can be combined."
                    },
                    "state": {
                        "enum": [
                            "waitingForFile",
                            "fileUploaded"
                        ],
                        "type": "string",
                        "description": "Indicates the state of the Changeset. 'waitingForFile' - indicates that Changeset metadata is created, but Changeset file is not uploaded yet or file upload is not confimerd yet. 'fileUploaded' - indicates that Changeset file is uploaded and confirmed."
                    },
                    "application": {
                        "$ref": "#/components/schemas/Application"
                    },
                    "synchronizationInfo": {
                        "$ref": "#/components/schemas/SynchronizationInfo"
                    },
                    "_links": {
                        "$ref": "#/components/schemas/CreatedChangesetLinks"
                    }
                },
                "description": "Changeset represents a file containing changes to the iModel. A single Changeset contains changes made on a single Briefcase file and pushed as a single file."
            },
            "ChangesetsMinimal": {
                "title": "Changesets (prefer return=minimal)",
                "type": "object",
                "properties": {
                    "changesets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ChangesetSummary"
                        },
                        "description": "Changesets of the iModel."
                    }
                },
                "description": "List of Changesets in minimal representation."
            },
            "ChangesetsRepresentation": {
                "title": "Changesets (prefer return=representation)",
                "type": "object",
                "properties": {
                    "changesets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Changeset"
                        },
                        "description": "Changesets of the iModel."
                    }
                },
                "description": "List of Changesets in full representation."
            },
            "NamedVersionResponse": {
                "title": "Named Version Response",
                "type": "object",
                "properties": {
                    "namedVersion": {
                        "$ref": "#/components/schemas/NamedVersion"
                    }
                },
                "description": "Container for Named Version object."
            },
            "NamedVersionCreate": {
                "title": "Named Version (create)",
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Named Version name."
                    },
                    "description": {
                        "description": "Description of the Named Version."
                    },
                    "changesetId": {
                        "description": "Id of the Changeset that the Named Version will be created for. If not provided a baseline iModel Named Version will be created."
                    }
                },
                "description": "Properties of the Named Version to be created."
            },
            "NamedVersionUpdate": {
                "title": "Named Version (update)",
                "type": "object",
                "properties": {
                    "name": {
                        "description": "Named Version name."
                    },
                    "description": {
                        "description": "Description of the Named Version."
                    },
                    "state": {
                        "enum": [
                            "hidden",
                            "visible"
                        ],
                        "description": "Indicates the state of the named version. 'hidden' - indicates that Named Version should be hidden in the user interface. 'visible' - indicates that Named Nersion should be visible in the user interface."
                    }
                },
                "description": "Properties of the Named Version to be updated."
            },
            "NamedVersionSummary": {
                "title": "Named Version (summary)",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id of the Named Version."
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Display name of the Named Version. Corresponds to Name property."
                    },
                    "changesetId": {
                        "description": "Id of the Changeset that the Named Version is created for."
                    },
                    "changesetIndex": {
                        "type": "integer",
                        "description": "Index of the Changeset that the Named Version is created for.",
                        "format": "int64"
                    }
                },
                "description": "Summarized representation of the Named Version."
            },
            "NamedVersionsMinimal": {
                "title": "Named Versions (prefer return=minimal)",
                "type": "object",
                "properties": {
                    "namedVersions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NamedVersionSummary"
                        },
                        "description": "List of Named Versions of the iModel."
                    },
                    "_links": {
                        "$ref": "#/components/schemas/PagingLinks"
                    }
                },
                "description": "List of Named Versions in minimal representation."
            },
            "NamedVersionsRepresentation": {
                "title": "Named Versions (prefer return=representation)",
                "type": "object",
                "properties": {
                    "namedVersions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NamedVersion"
                        },
                        "description": "List of Named Versions of the iModel."
                    },
                    "_links": {
                        "$ref": "#/components/schemas/PagingLinks"
                    }
                },
                "description": "List of Named Versions in full representation."
            },
            "NamedVersion": {
                "title": "Named Version",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id of the Named Version."
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Display name of the Named Version. Corresponds to Name property."
                    },
                    "changesetId": {
                        "description": "Id of the Changeset that the Named Version is created for."
                    },
                    "changesetIndex": {
                        "type": "integer",
                        "description": "Index of the Changeset that the Named Version is created for.",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string",
                        "description": "Named Version name."
                    },
                    "description": {
                        "description": "Description of the Named Version."
                    },
                    "createdDateTime": {
                        "type": "string",
                        "description": "Date when the Named Version was created."
                    },
                    "state": {
                        "enum": [
                            "hidden",
                            "visible"
                        ],
                        "type": "string",
                        "description": "Indicates the state of the named version. 'hidden' - indicates that Named Version should be hidden in the user interface. 'visible' - indicates that Named Version should be visible in the user interface."
                    },
                    "_links": {
                        "$ref": "#/components/schemas/NamedVersionLinks"
                    }
                },
                "description": "Full representation of the Named Version."
            },
            "UserResponse": {
                "title": "User Response",
                "type": "object",
                "properties": {
                    "user": {
                        "$ref": "#/components/schemas/User"
                    }
                },
                "description": "Container for user object."
            },
            "UserSummary": {
                "title": "User (summary)",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id of the user."
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Display name of the user. Corresponds to Email property."
                    },
                    "_links": {
                        "$ref": "#/components/schemas/UserLinks"
                    }
                },
                "description": "Summarized representation of the user."
            },
            "User": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id of the user."
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Display name of the user. Corresponds to Email property."
                    },
                    "givenName": {
                        "type": "string",
                        "description": "Given name of the user."
                    },
                    "surname": {
                        "type": "string",
                        "description": "Surname of the user."
                    },
                    "email": {
                        "type": "string",
                        "description": "E-mail address of the user."
                    },
                    "_links": {
                        "$ref": "#/components/schemas/UserLinks"
                    }
                },
                "description": "Full representation of the user."
            },
            "UsersMinimal": {
                "title": "Users (prefer return=minimal)",
                "type": "object",
                "properties": {
                    "Users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserSummary"
                        },
                        "description": "List of users who have ever been connected to the iModel."
                    },
                    "_links": {
                        "$ref": "#/components/schemas/PagingLinks"
                    }
                },
                "description": "List of users in minimal representation."
            },
            "UsersRepresentation": {
                "title": "Users (prefer return=representation)",
                "type": "object",
                "properties": {
                    "Users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/User"
                        },
                        "description": "List of users who have ever been connected to the iModel."
                    },
                    "_links": {
                        "$ref": "#/components/schemas/PagingLinks"
                    }
                },
                "description": "List of users in full representation."
            },
            "Lock": {
                "title": "Lock",
                "type": "object",
                "properties": {
                    "briefcaseId": {
                        "type": "integer",
                        "description": "Briefcase Id.",
                        "format": "int32"
                    },
                    "lockedObjects": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LockedObjects"
                        },
                        "description": "An array of locked objects."
                    }
                },
                "description": "Representation of a Lock."
            },
            "LockResponse": {
                "title": "Lock Response",
                "type": "object",
                "properties": {
                    "lock": {
                        "$ref": "#/components/schemas/Lock"
                    }
                },
                "description": "Container for Lock object."
            },
            "LocksResponse": {
                "title": "Locks Response",
                "type": "object",
                "properties": {
                    "locks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Lock"
                        },
                        "description": "List of locks."
                    },
                    "_links": {
                        "$ref": "#/components/schemas/PagingLinks"
                    }
                },
                "description": "List of Locks."
            },
            "UpdateLocks": {
                "title": "Locks (update)",
                "type": "object",
                "properties": {
                    "briefcaseId": {
                        "type": "integer",
                        "description": "Briefcase Id for which to update locks.",
                        "format": "int32"
                    },
                    "changesetId": {
                        "description": "Changeset Id. Meant to identify the latest Changeset in which the locked object was updated. If this value points to an older Changeset than the value saved in the server acquiring locks will fail."
                    },
                    "lockedObjects": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LockedObjects"
                        },
                        "description": "An array of locked objects."
                    }
                },
                "description": "Properties of locks to be updated."
            },
            "LockedObjects": {
                "title": "Locked Objects",
                "type": "object",
                "properties": {
                    "lockLevel": {
                        "enum": [
                            "none",
                            "shared",
                            "exclusive"
                        ],
                        "type": "string",
                        "description": "Indicates the lock level. Possible values: 'none' - used for realeasing already acquired locks, 'shared' - multiple Briefcases can acquire a shared lock on the same object, 'exclusive' - only one Briefcase can acquire an exclusive lock on a given object."
                    },
                    "objectIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of locked object ids. Allowed values are hexadecimal strings with '0x' prefix."
                    }
                },
                "description": "Contains a list of locked object ids and their lock level."
            },
            "image": {
                "type": "string",
                "description": "The binary image file",
                "format": "binary"
            },
            "EntityLinks": {
                "title": "Entity Links",
                "type": "object",
                "properties": {
                    "creator": {
                        "$ref": "#/components/schemas/Link"
                    }
                },
                "description": "Hyperlinks to related data which complements this entity."
            },
            "NamedVersionLinks": {
                "title": "Named Version Links",
                "type": "object",
                "properties": {
                    "creator": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "changeset": {
                        "$ref": "#/components/schemas/Link"
                    }
                },
                "description": "Hyperlinks to Named Version related data."
            },
            "iModelLinks": {
                "title": "iModel Links",
                "type": "object",
                "properties": {
                    "creator": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "changesets": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "namedVersions": {
                        "$ref": "#/components/schemas/Link"
                    }
                },
                "description": "Hyperlinks to related data which complements this entity."
            },
            "CreatediModelLinks": {
                "title": "Created iModel Links",
                "type": "object",
                "properties": {
                    "creator": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "changesets": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "namedVersions": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "upload": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "complete": {
                        "$ref": "#/components/schemas/Link"
                    }
                },
                "description": "Hyperlinks to related data which complements this entity."
            },
            "BaselineFileLinks": {
                "title": "Baseline File Links",
                "type": "object",
                "properties": {
                    "creator": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "download": {
                        "$ref": "#/components/schemas/Link"
                    }
                },
                "description": "Hyperlinks to Briefcase related data."
            },
            "BriefcaseLinks": {
                "title": "Briefcase Links",
                "type": "object",
                "properties": {
                    "owner": {
                        "$ref": "#/components/schemas/Link"
                    }
                },
                "description": "Hyperlinks to Briefcase related data."
            },
            "CheckpointLinks": {
                "title": "Checkpoint Links",
                "type": "object",
                "properties": {
                    "download": {
                        "$ref": "#/components/schemas/Link"
                    }
                },
                "description": "Hyperlinks to Checkpoint related data."
            },
            "ChangesetLinks": {
                "title": "Changeset Links",
                "type": "object",
                "properties": {
                    "creator": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "namedVersion": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "self": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "download": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "currentOrPrecedingCheckpoint": {
                        "$ref": "#/components/schemas/Link"
                    }
                },
                "description": "Hyperlinks to Changeset related data."
            },
            "CreatedChangesetLinks": {
                "title": "Created Changeset Links",
                "type": "object",
                "properties": {
                    "creator": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "namedVersion": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "self": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "upload": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "complete": {
                        "$ref": "#/components/schemas/Link"
                    }
                },
                "description": "Hyperlinks to Changeset related data."
            },
            "ChangesetLinksSummary": {
                "title": "Changeset Links (summary)",
                "type": "object",
                "properties": {
                    "creator": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "self": {
                        "$ref": "#/components/schemas/Link"
                    }
                },
                "description": "Hyperlinks to Changeset related data."
            },
            "UserLinks": {
                "title": "User Links",
                "type": "object",
                "properties": {
                    "self": {
                        "$ref": "#/components/schemas/Link"
                    }
                },
                "description": "Hyperlinks to User related data."
            },
            "Link": {
                "properties": {
                    "href": {
                        "type": "string",
                        "description": "Hyperlink to the specific entity."
                    }
                },
                "description": "Hyperlink container."
            },
            "Extent": {
                "required": [
                    "southWest",
                    "northEast"
                ],
                "properties": {
                    "southWest": {
                        "$ref": "#/components/schemas/Point"
                    },
                    "northEast": {
                        "$ref": "#/components/schemas/Point"
                    }
                },
                "description": "A rectangular area on the Earth. A rectangular area is defined by two latitudes and two longitudes that represent the four sides of a rectangular area on the Earth."
            },
            "Point": {
                "required": [
                    "longitude",
                    "latitude"
                ],
                "type": "object",
                "properties": {
                    "latitude": {
                        "maximum": 90,
                        "minimum": -90,
                        "type": "number",
                        "description": "Latitude. Latitude ranges between -90 and 90 degrees, inclusive.",
                        "format": "double"
                    },
                    "longitude": {
                        "maximum": 180,
                        "minimum": -180,
                        "type": "number",
                        "description": "Longitude. Longitude ranges between -180 and 180 degrees, inclusive.",
                        "format": "double"
                    }
                },
                "description": "A point on the Earth specified by a latitude and longitude."
            },
            "PagingLinks": {
                "title": "Paging Links",
                "type": "object",
                "properties": {
                    "self": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "prev": {
                        "$ref": "#/components/schemas/Link"
                    }
                },
                "description": "URLs for redoing the current request, getting to the previous or next page of results, if applicable."
            },
            "Application": {
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Application name."
                    }
                },
                "description": "Information about the client application that is related to an entity."
            },
            "SynchronizationInfo": {
                "properties": {
                    "changedFiles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of source file names that contained changes which were synchronized to this Changeset."
                    }
                },
                "description": "Information about synchronization that is related to a Changeset. This information is set by applications that perform iModel synchronization."
            },
            "Permissions": {
                "type": "object",
                "properties": {
                    "permissions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of permissions user has on an iModel."
                    }
                },
                "description": "List of permission user has on a given iModel."
            },
            "LocksErrorResponse": {
                "title": "Locks Error Response",
                "required": [
                    "error"
                ],
                "type": "object",
                "properties": {
                    "error": {
                        "$ref": "#/components/schemas/LocksError"
                    }
                },
                "description": "Returned in some specific cases from Locks request and contains additional information about the object ids that caused the error."
            },
            "ConflictingLocksErrorResponse": {
                "title": "Conflicting Locks Error Response",
                "required": [
                    "error"
                ],
                "type": "object",
                "properties": {
                    "error": {
                        "$ref": "#/components/schemas/ConflictingLocksError"
                    }
                },
                "description": "Returned when acquiring Locks fails due to conflicts and contains additional information about the conflicting Locks."
            },
            "LocksError": {
                "title": "Locks Error",
                "required": [
                    "code",
                    "message"
                ],
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "description": "One of a server-defined set of error codes."
                    },
                    "message": {
                        "type": "string",
                        "description": "A human-readable representation of the error."
                    },
                    "objectIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Contains object ids that are causing the error."
                    }
                },
                "description": "Contains error information and an array of object ids that are causing the error."
            },
            "ConflictingLocksError": {
                "title": "Conflicting Locks Error",
                "required": [
                    "code",
                    "message"
                ],
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "description": "One of a server-defined set of error codes."
                    },
                    "message": {
                        "type": "string",
                        "description": "A human-readable representation of the error."
                    },
                    "conflictingLocks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ConflictingLock"
                        },
                        "description": "Contains information about conflicting locks."
                    }
                },
                "description": "Contains error information and additional information about conflicting Locks."
            },
            "ConflictingLock": {
                "title": "Conflicting Lock",
                "required": [
                    "objectId",
                    "lockLevel",
                    "briefcaseIds"
                ],
                "type": "object",
                "properties": {
                    "objectId": {
                        "type": "string",
                        "description": "Object id that caused the conflict."
                    },
                    "lockLevel": {
                        "enum": [
                            "shared",
                            "exclusive"
                        ],
                        "type": "string",
                        "description": "The level of conflicting lock. Possible values are 'shared', 'exclusive'."
                    },
                    "briefcaseIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "description": "An array of briefcase ids that own this lock."
                    }
                },
                "description": "Contains information about a conflicting lock."
            },
            "Error": {
                "required": [
                    "code",
                    "message"
                ],
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "description": "One of a server-defined set of error codes."
                    },
                    "message": {
                        "type": "string",
                        "description": "A human-readable representation of the error."
                    },
                    "details": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ErrorDetails"
                        },
                        "description": "Optional array of more specific errors."
                    }
                },
                "description": "Contains error information and an optional array of more specific errors."
            },
            "ErrorDetails": {
                "title": "Error Details",
                "required": [
                    "code",
                    "message"
                ],
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "description": "One of a server-defined set of error codes."
                    },
                    "message": {
                        "type": "string",
                        "description": "A human-readable representation of the error."
                    }
                },
                "description": "Contains error information."
            },
            "ErrorResponse": {
                "title": "Error Response",
                "required": [
                    "error"
                ],
                "type": "object",
                "properties": {
                    "error": {
                        "$ref": "#/components/schemas/Error"
                    }
                },
                "description": "Gives details for an error that occurred while handling the request. Note that clients MUST NOT assume that every failed request will produce an object of this schema, or that all of the properties in the response will be non-null, as the error may have prevented this response from being constructed."
            }
        },
        "securitySchemes": {
            "apiKeyHeader": {
                "type": "apiKey",
                "name": "X-Api-Subscription-Key",
                "in": "header"
            },
            "apiKeyQuery": {
                "type": "apiKey",
                "name": "subscription-key",
                "in": "query"
            }
        }
    },
    "security": [
        {
            "apiKeyHeader": []
        },
        {
            "apiKeyQuery": []
        }
    ]
}